{"version":3,"sources":["components/GlobalLoader.js","components/MaterialStyles.js","Context/HomeContext.js","Services/AuthServices.js","components/SideNavBar.js","Context/GlobalLoadingContext.js","Services/TodoServices.js","components/ConfirmDialog.js","components/Todos/OperationDialog.js","components/Todos/ReminderDialog.js","components/Todos/Todo.js","Services/CourseServices.js","components/Rating.js","components/Courses/Operation.js","components/Courses/Courses.js","Services/UserServices.js","components/StudentEnroll/Operation.js","components/StudentEnroll/RegisterStudent.js","components/StudentEnroll/StudentEnroll.js","components/MyCourses/MyCourses.js","Navigations.js","components/NavBar.js","components/Home.js","components/Login.js","components/Register.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalLoader","className","size","color","useStyles","makeStyles","theme","root","display","width","overflowX","drawer","breakpoints","up","flexShrink","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","height","HomeContext","createContext","HomeContextProvider","props","useState","navigator","setNavigator","Provider","value","children","getUser","token","localStorage","getItem","JSON","parse","atob","split","currentUser","BehaviorSubject","RegisterService","userDetails","a","console","log","process","fetch","method","headers","body","stringify","firstName","lastName","emailId","isAdmin","enrollmentNumber","password","programme","then","res","json","catch","err","status","message","LoginService","data","setItem","next","SideNavBar","useLocation","pathname","useContext","user","setUser","useEffect","AuthObservalble","subscribe","unsubscribe","src","onClick","AssignmentOutlined","MenuBookOutlined","AddToPhotosSharp","EventNoteOutlined","GlobalLoadingContext","GlobalLoadingContextProvider","globalLoading","setGlobalLoading","getTodos","filter","FormData","append","addTodos","todoDetails","task","description","updateTodos","_id","done","deleteTodos","idx","setReminder","schedule","d","Date","getSeconds","getMinutes","getHours","getDate","getMonth","getDay","ConfirmDialog","Dialog","open","onClose","close","fullWidth","DialogTitle","Fab","DeleteOutlined","item","DialogContent","DialogActions","Button","variant","action","OperationDialog","todo","setTodoDetails","AddTodo","AddTodoResponse","toast","success","FetchTodos","error","UpdateTodo","UpdateTodoResponse","updateTodo","CancelSharp","style","cursor","TextField","label","onChange","e","target","required","multiline","rows","disabled","ReminderDilaog","reminderDate","setReminderDate","SetReminder","reminderResponse","focused","type","Todo","todos","setTodos","loading","setLoading","setFilter","openOperationDialog","setOpenOperationDialog","openReminderDialog","setOpenReminderDialog","todoDescriptionOpen","setTodoDescriptionOpen","todoUpdateDetails","setTodoUpdateDetails","ConfirmDeleteDialog","setConfirmDeleteDialog","CloseConfirmDeleteDialog","getTableScaling","document","querySelectorAll","todosContainer","querySelector","mainContainer","undefined","length","offsetWidth","i","transform","transformOrigin","rowGap","TodosResponse","UpdateTodoItem","updatedList","map","MarkComplete","DeleteTodo","DeleteTodoResponse","window","addEventListener","removeEventListener","startIcon","AddOutlined","select","SelectProps","native","margin","SentimentDissatisfiedOutlined","seconds","AssignmentTurnedInOutlined","created_at","moment","format","backgroundColor","NavigateNextOutlined","ExpandLessOutlined","AccessAlarmOutlined","EditOutlined","addCourse","courseDetails","courseName","courseCode","credits","prerequisites","courseDescription","faculty","categoryIds","school","updateCourse","addRating","comment","rating","deleteCourse","getCourse","search","getEnrolledIn","semester","year","enrollStudents","otherData","m","students","push","student","parseInt","course","get","Rating","onMouseOver","readonly","setRating","Star","StarOutlineOutlined","Operation","setCourseDetails","init","dataIsValid","setDataIsValid","prerequisitesRef","useRef","categoryRef","ScheduleDay","start","end","Days","isValid","Object","keys","key","DeletePrerequisites","pre","pred","DeleteCategory","cat","cate","DeleteDay","sche","sched","day","time","AddCourse","AddCourseResponse","FetchCourses","UpdateCourse","UpdateCourseResponse","inputRef","current","Chip","onDelete","Courses","courses","setcourses","courseDescriptionOpen","setCourseDescriptionOpen","courseRatingOpen","setCourseRatingOpen","courseUpdateDetails","setCourseUpdateDetails","ratingRef","page","setPage","searchTerm","coursesContainer","CourseResponse","DeleteCourse","DeleteCourseResponse","updateRating","rate","temp","ratings","AddRating","AddRatingResponse","ChangeRating","newRating","getRating","r","InputProps","endAdornment","InputAdornment","SearchOutlined","textAlign","slice","Math","min","toUpperCase","Add","RemoveOutlined","k","IconButton","FirstPageOutlined","prev","NavigateBeforeOutlined","ceil","LastPageOutlined","getUsers","setStudents","setOtherData","checked","courseMap","Map","courseData","set","EnrollStudents","response","inputProps","list","id","RegisterStudent","detailsIsValid","setDetailsIsValid","confirmPassword","setUserDetails","HandleRegister","preventDefault","RegsitrationResponse","FetchStudents","StudentEnroll","openRegisterStudentDialog","setOpenRegisterStudentDialog","selectAllResf","selectRef","studentsContainer","StudentResponse","ref","HandleSelectAll","el","MyCourses","setCredits","setSemester","setYear","enrollments","c","CheckCircle","NavigationAdmin","Navigations","NavigationComponent","NavigationComponentAdmin","NavBar","classes","anchorEl","setAnchorEl","AuthObservable","handleClose","AppBar","edge","handleDrawerToggle","MenuOutlined","event","currentTarget","Avatar","word","charAt","ExpandMoreOutlined","Menu","Boolean","marginTop","MenuItem","removeItem","Home","useTheme","React","mobileOpen","setMobileOpen","container","location","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","Login","HandleLogin","LoginResponse","onSubmit","to","Register","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configure","position","POSITION","TOP_RIGHT","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11622a3b.chunk.js","sourcesContent":["import HashLoader from 'react-spinners/HashLoader'\r\n\r\nexport default function GlobalLoader() {\r\n    return (\r\n        <div className=\"position-fixed top-0 left-0 d-flex justify-content-center align-items-center global-loader\">\r\n            <HashLoader size={60} color=\"#36D7B7\" />\r\n        </div>\r\n    )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 255;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      width: \"100vw\",\r\n      overflowX: \"hidden\"\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      \r\n    },\r\n    menuButton: {\r\n      \r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      height: \"100vh\",\r\n      overflowX: \"hidden\"\r\n    },\r\n  }));\r\n\r\n  export {useStyles};","import React, { createContext, useState } from 'react'\r\n\r\nexport const HomeContext = createContext();\r\n\r\nexport default function HomeContextProvider(props) {\r\n    const [navigator,setNavigator] = useState(0);\r\n    return (\r\n        <HomeContext.Provider value={{navigator,setNavigator}}>\r\n            {props.children}\r\n        </HomeContext.Provider>\r\n    )\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nlet getUser = () => {\r\n    let token = localStorage.getItem(\"StudentToken\") || null;\r\n    if(token === null){\r\n        return null;\r\n    }\r\n    else{\r\n        let payload = JSON.parse(atob(token.split('.')[1]));\r\n        return payload;\r\n    }\r\n} \r\n\r\nlet currentUser = new BehaviorSubject(getUser());\r\n\r\nasync function RegisterService(userDetails){\r\n    console.log(process.env.REACT_APP_Backend)\r\n    return fetch(\"/api/auth/register\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            firstName: userDetails.firstName,\r\n            lastName: userDetails.lastName,\r\n            emailId: userDetails.emailId,\r\n            isAdmin: userDetails.isAdmin,\r\n            enrollmentNumber: userDetails.enrollmentNumber,\r\n            password: userDetails.password,\r\n            programme: userDetails.programme\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        console.log(err)\r\n        return {\r\n            \r\n            status: false,\r\n            message: \"Something Went Wrong!\"\r\n        }\r\n    })\r\n}\r\nasync function LoginService(userDetails){\r\n    console.log(process.env.REACT_APP_Backend)\r\n    return fetch(\"/api/auth/login\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            emailId: userDetails.emailId,\r\n            password: userDetails.password\r\n        })\r\n    }).then(res => res.json()).then(data => {\r\n        if(data.status){\r\n            localStorage.setItem(\"StudentToken\",data.token);\r\n            currentUser.next(getUser)\r\n        }\r\n\r\n        return data;\r\n    }).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Something Went Wrong!\"\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction Logout(){\r\n    console.log(\"enterd\")\r\n    window.localStorage.removeItem(\"StudentToken\");\r\n    currentUser.next(getUser());\r\n}\r\n\r\n\r\n\r\nexport {LoginService, RegisterService, Logout, currentUser}","import { AddToPhotosSharp, AssignmentOutlined, EventNoteOutlined, MenuBookOutlined } from '@material-ui/icons'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { HomeContext } from '../Context/HomeContext'\r\nimport { currentUser } from '../Services/AuthServices'\r\nimport './home.scss'\r\n\r\nexport default function SideNavBar() {\r\n    const route = useLocation()\r\n    const path = route.pathname.split('/')[1];\r\n    const {navigator,setNavigator} = useContext(HomeContext)\r\n    const [user,setUser] = useState(currentUser.value)\r\n    \r\n    useEffect(() => {\r\n    let AuthObservalble = currentUser.subscribe(data => setUser(data))\r\n\r\n    return () => {\r\n      AuthObservalble.unsubscribe();\r\n    }\r\n  },[])\r\n\r\n    return (\r\n        <div className=\"w-100 h-100 side-navbar\">\r\n            <img className=\"mt-3 mx-3\" src=\"guide.png\"></img>\r\n            <div className=\"d-flex flex-column mt-5\">\r\n                {user.isAdmin ? <>\r\n                    <div onClick={() => setNavigator(0)} className={\"w-100 d-flex px-4 py-3 side-nav-item\" + (navigator===0 ? \" active\" : \"\")} > \r\n                        <AssignmentOutlined />\r\n                        Todos\r\n                    </div>\r\n                    \r\n                    <div onClick={() => setNavigator(1)} className={\"w-100 d-flex px-4 py-3 side-nav-item\" + (navigator===1 ? \" active\" : \"\")} >\r\n                        <MenuBookOutlined />\r\n                        Course\r\n                    </div>\r\n                    <div onClick={() => setNavigator(2)} className={\"w-100 d-flex px-4 py-3 side-nav-item\" + (navigator===2 ? \" active\" : \"\")} >\r\n                        <AddToPhotosSharp />\r\n                        Stuent Enrollment\r\n                    </div>\r\n                \r\n                </> : <>\r\n                \r\n                    <div onClick={() => setNavigator(0)} className={\"w-100 d-flex px-4 py-3 side-nav-item\" + (navigator===0 ? \" active\" : \"\")} > \r\n                        <AssignmentOutlined />\r\n                        Todos\r\n                    </div>\r\n                    \r\n                    <div onClick={() => setNavigator(1)} className={\"w-100 d-flex px-4 py-3 side-nav-item\" + (navigator===1 ? \" active\" : \"\")} >\r\n                        <EventNoteOutlined />\r\n                        My Courses\r\n                    </div>\r\n                    <div onClick={() => setNavigator(2)} className={\"w-100 d-flex px-4 py-3 side-nav-item\" + (navigator===2 ? \" active\" : \"\")} >\r\n                        <MenuBookOutlined />\r\n                        Courses\r\n                    </div>\r\n                \r\n                </>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { createContext, useState } from 'react'\r\n\r\nexport const GlobalLoadingContext = createContext();\r\n\r\nexport default function GlobalLoadingContextProvider(props) {\r\n    const [globalLoading,setGlobalLoading] = useState(false);\r\n    return (\r\n        <GlobalLoadingContext.Provider value={{globalLoading,setGlobalLoading}}>\r\n            {props.children}\r\n        </GlobalLoadingContext.Provider>\r\n    )\r\n}\r\n","async function getTodos(filter){\r\n\r\n    let formData = new FormData();\r\n\r\n    formData.append('filter',filter)\r\n    return fetch('/api/todo/get',{\r\n        method: \"POST\",\r\n        headers: {\r\n            'Authorization': localStorage.getItem(\"StudentToken\"),\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            filter: filter\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to fetch Todos\"\r\n        }\r\n    })\r\n}\r\nasync function addTodos(todoDetails){\r\n    return fetch('/api/todo/add',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"authorization\": localStorage.getItem(\"StudentToken\")\r\n        },\r\n        body: JSON.stringify({\r\n            task: todoDetails.task,\r\n            description: todoDetails.description\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to Add Todo\"\r\n        }\r\n    })\r\n}\r\nasync function updateTodos(todoDetails){\r\n    return fetch('/api/todo/update',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"authorization\": localStorage.getItem(\"StudentToken\")\r\n        },\r\n        body: JSON.stringify({\r\n            _id: todoDetails._id,\r\n            task: todoDetails.task,\r\n            description: todoDetails.description,\r\n            done: todoDetails.done\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to Update Todo\"\r\n        }\r\n    })\r\n}\r\nasync function deleteTodos(idx){\r\n    return fetch('/api/todo/delete',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"authorization\": localStorage.getItem(\"StudentToken\")\r\n        },\r\n        body: JSON.stringify({\r\n            _id: idx\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to Delete Todo\"\r\n        }\r\n    })\r\n}\r\n\r\nasync function setReminder(schedule,data){\r\n    let d = new Date(schedule)\r\n    return fetch('/api/todo/reminder',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            schedule: `${d.getSeconds()} ${d.getMinutes()} ${d.getHours()} ${d.getDate()} ${d.getMonth() + 1} ${d.getDay()}`,\r\n            emailId: data.emailId,\r\n            task: data.task\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to Enroll Students\"\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport {getTodos, addTodos, updateTodos, deleteTodos,setReminder}","import { Dialog, DialogTitle,Fab, DialogContent, DialogActions, Button } from \"@material-ui/core\";\r\nimport { DeleteOutlined } from \"@material-ui/icons\";\r\n\r\nexport default function ConfirmDialog(props){\r\n    return (\r\n        <Dialog open={props.open || false} onClose={props.close} fullWidth className=\"confirm-dialog\">\r\n            <DialogTitle>\r\n                <div className=\"d-flex align-items-center confirm-dialog-title\">\r\n                    <Fab className=\"confirm-dialog-title-icon\">\r\n                        <DeleteOutlined />\r\n                    </Fab>\r\n                    {`Delete the ${props.item} ?`}\r\n                </div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent className=\"confirm-content\">\r\n                {`If you delete, the ${props.item} will be gone forever . Are you sure want to proceed?`}\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button variant=\"contained\" onClick={() => props.close()}>Cancel</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={props.action}>Yes</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import { Button, Dialog, DialogActions, DialogContent, DialogTitle,TextField } from '@material-ui/core'\r\nimport { CancelOutlined, CancelSharp } from '@material-ui/icons'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport './todo.scss'\r\nimport {GlobalLoadingContext} from '../../Context/GlobalLoadingContext'\r\nimport { toast } from 'react-toastify'\r\nimport { addTodos, updateTodos } from '../../Services/TodoServices'\r\n\r\n\r\nexport default function OperationDialog(props) {\r\n    const [todoDetails,setTodoDetails] = useState(props.todo || {\r\n        task: \"\",\r\n        description: \"\"\r\n    })\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext)\r\n\r\n    useEffect(() => {\r\n        setTodoDetails(props.todo || {\r\n            task: \"\",\r\n            description: \"\"\r\n        })\r\n    },[props.todo])\r\n    console.log(props,todoDetails)\r\n    let AddTodo = async () => {\r\n        setGlobalLoading(true)\r\n        try{\r\n            let AddTodoResponse = await addTodos(todoDetails);\r\n            setGlobalLoading(false)\r\n            if(AddTodoResponse.status){\r\n                toast.success(AddTodoResponse.message)\r\n                await props.FetchTodos();\r\n                setTodoDetails({\r\n                    task: \"\",\r\n                    description: \"\"\r\n                })\r\n                props.close();\r\n            }else{\r\n                toast.error(AddTodoResponse.message)\r\n            }\r\n        }catch(err){\r\n            setGlobalLoading(false)\r\n            toast.error(\"Unable to add Todo\")\r\n        }\r\n    }\r\n\r\n    let UpdateTodo = async () => {\r\n        setGlobalLoading(true)\r\n        try{\r\n            let UpdateTodoResponse = await updateTodos(todoDetails);\r\n            setGlobalLoading(false)\r\n            if(UpdateTodoResponse.status){\r\n                toast.success(UpdateTodoResponse.message)\r\n                await props.updateTodo(todoDetails);\r\n                setTodoDetails({\r\n                    task: \"\",\r\n                    description: \"\"\r\n                })\r\n                props.close();\r\n            }else{\r\n                toast.error(UpdateTodoResponse.message)\r\n            }\r\n        }catch(err){\r\n            setGlobalLoading(false)\r\n            toast.error(\"Unable to Update Todo\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} fullWidth className=\"operation-dialog\">\r\n            <DialogActions><CancelSharp onClick={() => {setTodoDetails({\r\n                    task: \"\",\r\n                    description: \"\"\r\n                }); props.close()}} style={{color: \"lightgrey\",cursor:\"pointer\"}}  /></DialogActions>\r\n            <DialogTitle className=\"dialog-title\">{props.todo ? \"Update Todo\" : \"Add Todo\"}</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField \r\n                        label=\"Task Name\"\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={todoDetails.task}\r\n                        onChange={(e) => setTodoDetails({...todoDetails,task: e.target.value})}\r\n                        required\r\n                    />\r\n                    <TextField \r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={todoDetails.description}\r\n                        onChange={(e) => setTodoDetails({...todoDetails,description: e.target.value})}\r\n                        required\r\n                    />\r\n                </form>\r\n\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" onClick={() => {setTodoDetails({\r\n                    task: \"\",\r\n                    description: \"\"\r\n                });props.close()}}>Cancel</Button>\r\n                    <Button variant=\"contained\" onClick={props.todo ?  UpdateTodo : AddTodo} disabled={todoDetails.task===\"\" || todoDetails.description===\"\"} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle,TextField } from '@material-ui/core'\r\nimport { CancelOutlined, CancelSharp } from '@material-ui/icons'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport './todo.scss'\r\nimport {GlobalLoadingContext} from '../../Context/GlobalLoadingContext'\r\nimport { toast } from 'react-toastify'\r\nimport { addTodos, setReminder, updateTodos } from '../../Services/TodoServices'\r\n\r\n\r\nexport default function ReminderDilaog(props) {\r\n    const [todoDetails,setTodoDetails] = useState({\r\n        task: props.task,\r\n        emailId: props.emailId\r\n    })\r\n    const [reminderDate,setReminderDate] = useState(\"\")\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext)\r\n    useEffect(() => {\r\n        setTodoDetails({\r\n            task: props.task,\r\n            emailId: props.emailId\r\n        })\r\n    },[props.task,props.emailId])\r\n    let SetReminder = async () => {\r\n        setGlobalLoading(true);\r\n        try{\r\n            let reminderResponse = await setReminder(reminderDate,todoDetails);\r\n            if(reminderResponse.status){\r\n                setGlobalLoading(false);\r\n                toast.success(reminderResponse.message)\r\n                props.close()\r\n            }else{\r\n                setGlobalLoading(false);\r\n                toast.error(\"Unable to Set Reminder\")\r\n            }\r\n        }catch(err){\r\n            setGlobalLoading(false);\r\n            toast.error(\"Unable to Set Reminder\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} fullWidth className=\"operation-dialog\">\r\n            <DialogActions><CancelSharp onClick={() => {setTodoDetails({\r\n                task: props.task,\r\n                emailId: props.emailId,\r\n            }); props.close()}} style={{color: \"lightgrey\",cursor:\"pointer\"}}  /></DialogActions>\r\n            <DialogTitle className=\"dialog-title\">{\"Set Reminder\"}</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField \r\n                        label=\"Date\"\r\n                        focused\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={reminderDate}\r\n                        onChange={(e) => setReminderDate(e.target.value)}\r\n                        required\r\n                        type=\"datetime-local\"\r\n                    />\r\n                </form>\r\n\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" onClick={() => {setTodoDetails({\r\n                        task: props.task,\r\n                        emailId: props.emailId,\r\n                    });props.close()}}>Cancel</Button>\r\n                    <Button variant=\"contained\" onClick={SetReminder} disabled={reminderDate===\"\"} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import { Button, Fab, TextField } from '@material-ui/core';\r\nimport { AccessAlarmOutlined, AddOutlined, AssignmentTurnedInOutlined, DeleteOutlined, EditOutlined, ExpandLessOutlined, NavigateNextOutlined, SentimentDissatisfiedOutlined } from '@material-ui/icons';\r\nimport * as moment from 'moment';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport { toast } from 'react-toastify';\r\nimport { GlobalLoadingContext } from '../../Context/GlobalLoadingContext';\r\nimport { currentUser } from '../../Services/AuthServices';\r\nimport { deleteTodos, getTodos, updateTodos } from '../../Services/TodoServices';\r\nimport ConfirmDialog from '../ConfirmDialog';\r\nimport OperationDialog from './OperationDialog';\r\nimport ReminderDilaog from './ReminderDialog';\r\nimport './todo.scss';\r\n\r\nexport default function Todo() {\r\n\r\n    const [todos,setTodos] = useState(\"loading\");\r\n    const [user,setUser] = useState(currentUser.value)\r\n    const [loading,setLoading] = useState(false);\r\n    const [filter,setFilter] = useState(\"All\");\r\n    const [openOperationDialog,setOpenOperationDialog] = useState(false);\r\n    const [openReminderDialog,setOpenReminderDialog] = useState({\r\n        open: false,\r\n        task: false,\r\n        emailId: user.emailId || \"\"\r\n    });\r\n    const [todoDescriptionOpen,setTodoDescriptionOpen] = useState(-1);\r\n    const [todoUpdateDetails,setTodoUpdateDetails] = useState(false);\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext)\r\n    const [ConfirmDeleteDialog,setConfirmDeleteDialog] = useState({\r\n        open: false,\r\n        idx: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        let AuthObservalble = currentUser.subscribe(data => setUser(data))\r\n    \r\n        return () => {\r\n          AuthObservalble.unsubscribe();\r\n        }\r\n      },[])\r\n\r\n    let CloseDialog = () => {\r\n        setOpenOperationDialog(false);\r\n        setTodoUpdateDetails(false);\r\n    }\r\n    let CloseReminderDialog = () => {\r\n        setOpenReminderDialog({\r\n            open: false,\r\n            task: false,\r\n            emailId: user.emailId || \"\"\r\n        })\r\n    }\r\n    let CloseConfirmDeleteDialog = () => {\r\n        setConfirmDeleteDialog({\r\n            open: false,\r\n            idx: false\r\n        })\r\n    }\r\n\r\n    let getTableScaling = () => {\r\n        let todo = document.querySelectorAll(\".todo-details\");\r\n        let todosContainer = document.querySelector(\".todos-container\");\r\n        let mainContainer = document.querySelector(\"#main-container\")\r\n        if(todo !== undefined && todosContainer!==undefined && todo.length > 0){\r\n            if(mainContainer.offsetWidth < todo[0].offsetWidth){\r\n                for(let i=0;i<todo.length;i++){\r\n                    todo[i].style.transform = `scale(${(mainContainer.offsetWidth / todo[i].offsetWidth) - 0.03})`\r\n                    todo[i].style.transformOrigin = \"center center\";\r\n                    todosContainer.style.rowGap = \"0rem 0rem\"\r\n                }\r\n            }\r\n            else{\r\n                for(let i=0;i<todo.length;i++){\r\n                    todo[i].style.transform = `scale(1)`\r\n                    todo[i].style.transformOrigin = \"0% 0%\"\r\n                    todosContainer.style.rowGap = \"0rem 0.8rem\"\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    let FetchTodos = async () => {\r\n        setLoading(true);\r\n        try{\r\n            \r\n            let TodosResponse = await getTodos(filter);\r\n            setLoading(false);\r\n            if(TodosResponse.status){\r\n                setTodos(TodosResponse.todos)\r\n            }else{\r\n                setTodos([])\r\n                toast.error(\"Unable to get Todos\") \r\n            }\r\n        }catch(err){\r\n            setLoading(false);\r\n            toast.error(\"Unable to get Todos\")\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    \r\n\r\n    let UpdateTodoItem = (todo) => {\r\n        let updatedList = todos.map(item => \r\n            {\r\n              if (item._id == todo._id){\r\n                return todo; \r\n              }\r\n              return item; \r\n            }); \r\n            \r\n        setTodos(updatedList);    \r\n    }\r\n\r\n    let MarkComplete = async (todo) => {\r\n        setGlobalLoading(true)\r\n        todo = {...todo,done: !todo.done};\r\n        try{\r\n            let UpdateTodoResponse = await updateTodos(todo);\r\n            \r\n            if(UpdateTodoResponse.status){\r\n                toast.success(UpdateTodoResponse.message)\r\n                await UpdateTodoItem(todo);\r\n                setGlobalLoading(false)\r\n            }else{\r\n                toast.error(UpdateTodoResponse.message)\r\n                setGlobalLoading(false)\r\n            }\r\n        }catch(err){\r\n            setGlobalLoading(false)\r\n            toast.error(\"Unable to Update Todo\")\r\n        }\r\n    }\r\n\r\n    let DeleteTodo =async (idx) => {\r\n        CloseConfirmDeleteDialog()\r\n        setGlobalLoading(true);\r\n\r\n        try{\r\n            let DeleteTodoResponse = await deleteTodos(idx);\r\n            \r\n            if(DeleteTodoResponse.status){\r\n                toast.success(DeleteTodoResponse.message)\r\n                await FetchTodos()\r\n                setGlobalLoading(false)\r\n                setTodoDescriptionOpen(-1)\r\n            }else{\r\n                toast.error(DeleteTodoResponse.message)\r\n                setGlobalLoading(false)\r\n            }\r\n        }catch(err){\r\n            setGlobalLoading(false)\r\n            toast.error(\"Unable to Delete Todo\")\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        FetchTodos(filter);\r\n    },[filter])\r\n\r\n    useEffect(() => {\r\n        getTableScaling();\r\n\r\n        window.addEventListener('resize',getTableScaling)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize',getTableScaling)\r\n        }\r\n    },[todos])\r\n\r\n    let getDate = (seconds) => {\r\n        return moment(new Date(seconds * 1000)).format('DD-MM-YYYY')\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"w-100 mt-4 px-lg-5 px-md-4 px-1 d-flex justify-content-between align-items-center\">\r\n                <Button variant=\"contained\" onClick={() => setOpenOperationDialog(true)} startIcon={<AddOutlined />} color=\"primary\">Add Todo</Button>\r\n                <TextField \r\n                    select \r\n                    SelectProps={{\r\n                        native: true\r\n                    }}\r\n                    value={filter}\r\n                    onChange={(e) => setFilter(e.target.value)}\r\n                >\r\n                    <option value=\"All\">All</option>\r\n                    <option value={true}>Completed</option>\r\n                    <option value={false}>Pending</option>\r\n                </TextField>\r\n            </div>\r\n            {todos===\"loading\" || loading ? <div className=\"w-100 mt-4 text-center\"><PulseLoader size={15} margin={2} color=\"#36D7B7\" /></div> : \r\n            <>\r\n            {todos.length===0 ? <h4 className={`text-center mt-5 no-data-found`}>No Data Found <SentimentDissatisfiedOutlined /></h4> :\r\n            \r\n            <div className=\"w-100 mt-4 d-flex flex-column justify-content-between align-items-center todos-container px-lg-5 px-md-4 px-1 mx-auto\">\r\n               {todos.map((todo,i) => \r\n                    <span key={todo._id} className=\"w-100 todo-details\">\r\n                        <div className=\"w-100 d-flex justify-content-between align-items-center todo py-0\">\r\n                            <span><Fab className={\"col-1 fab-button \" + (todo.done ? \"completed\" :\"not_completed\")} ><AssignmentTurnedInOutlined className={(todo.done ? \"completed\" :\"not_completed\")} /></Fab></span>\r\n                            <span className=\"col-4\">{todo.task}</span>\r\n                            <span className=\"cl-3\">{getDate(todo.created_at)}</span>\r\n                            <span className=\"col-3\" className={todo.done ? \"completed\" :\"not_completed\"} style={{backgroundColor: \"white\"}}><li>{todo.done ? \"Completed\": \"Pending\"}</li></span>\r\n                            <span className=\"col-1\">{todoDescriptionOpen!==i ? <NavigateNextOutlined onClick={() => setTodoDescriptionOpen(i)} style={{color: \"lightgrey\",cursor: 'pointer'}} /> : <ExpandLessOutlined onClick={() => setTodoDescriptionOpen(-1)} style={{color: \"lightgrey\",cursor: 'pointer'}} />}</span>\r\n                        </div>\r\n                        {todoDescriptionOpen===i && <div className=\"w-100 mt-4 ps-3 todo-description\">\r\n                            <h5>Description</h5>\r\n                            <p className=\"ps-2\">{todo.description}</p>\r\n                            <div className=\"mt-3 mb-3 d-flex align-items-center flex-wrap\">\r\n                                <Button variant=\"contained\" onClick={() => MarkComplete(todo)} startIcon={<AssignmentTurnedInOutlined />} className=\"mark-completed-btn\">{todo.done ? \"Mark Pending\" : \"Mark Complted\"}</Button>\r\n                                <Button variant=\"contained\" onClick={() => setOpenReminderDialog({\r\n                                    open: true,\r\n                                    task: todo.task,\r\n                                    emailId: user.emailId\r\n                                })} startIcon={<AccessAlarmOutlined />} color=\"primary\">Set Reminder</Button>\r\n                                <Button variant=\"outlined\" onClick={async () => {\r\n                                    await setTodoUpdateDetails(todo);\r\n                                    setOpenOperationDialog(true);\r\n                                }} startIcon={<EditOutlined />}>Edit</Button>\r\n                                <Button variant=\"contained\" onClick={() => {setConfirmDeleteDialog({\r\n                                    open: true,\r\n                                    idx: todo._id\r\n                                })}} startIcon={<DeleteOutlined />} className=\"delete-btn\">Delete</Button>\r\n                            </div>\r\n                        </div>}\r\n                    </span>\r\n               )} \r\n            </div>\r\n            }</> \r\n            }\r\n            {openReminderDialog.open && <ReminderDilaog open={openReminderDialog.open} task={openReminderDialog.task} emailId={openReminderDialog.emailId} close={CloseReminderDialog} />}\r\n            <OperationDialog close={CloseDialog} open={openOperationDialog} todo={todoUpdateDetails} updateTodo={UpdateTodoItem} FetchTodos={FetchTodos} />\r\n            <ConfirmDialog open={ConfirmDeleteDialog.open} item={\"Course\"} close={CloseConfirmDeleteDialog} action={() => DeleteTodo(ConfirmDeleteDialog.idx)} />\r\n        </>\r\n    )\r\n}\r\n","async function addCourse(courseDetails){\r\n    return fetch('/api/course/add',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            courseName: courseDetails.courseName,\r\n            courseCode: courseDetails.courseCode,\r\n            credits: courseDetails.credits,\r\n            prerequisites: courseDetails.prerequisites,\r\n            courseDescription: courseDetails.courseDescription,\r\n            faculty: courseDetails.faculty,\r\n            categoryIds: courseDetails.categoryIds,\r\n            schedule: courseDetails.schedule,\r\n            school: courseDetails.school\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to Add Course\"\r\n        }\r\n    })\r\n}\r\nasync function updateCourse(courseDetails){\r\n    return fetch('/api/course/update',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            courseName: courseDetails.courseName,\r\n            courseCode: courseDetails.courseCode,\r\n            credits: courseDetails.credits,\r\n            prerequisites: courseDetails.prerequisites,\r\n            courseDescription: courseDetails.courseDescription,\r\n            faculty: courseDetails.faculty,\r\n            categoryIds: courseDetails.categoryIds,\r\n            schedule: courseDetails.schedule,\r\n            school: courseDetails.school\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to Update Course\"\r\n        }\r\n    })\r\n}\r\nasync function addRating(idx,comment,rating){\r\n    return fetch('/api/course/addRating',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            _id: idx,\r\n            rating: {\r\n                rating: rating,\r\n                comment: comment || \"\"\r\n            }\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to Add Rating\"\r\n        }\r\n    })\r\n}\r\nasync function deleteCourse(idx){\r\n    return fetch('/api/course/delete',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            _id: idx\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to Delete Course\"\r\n        }\r\n    })\r\n}\r\nasync function getCourse(search=\"\"){\r\n    return fetch('/api/course/get',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            search: search\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to get Course\"\r\n        }\r\n    })\r\n}\r\n\r\nasync function getEnrolledIn(semester=\"\",year=\"\"){\r\n    return fetch('/api/course/enrolledIn',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\",\r\n            \"authorization\": localStorage.getItem(\"StudentToken\")\r\n        },\r\n        body: JSON.stringify({\r\n            semester: semester,\r\n            year: year\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to get Course\"\r\n        }\r\n    })\r\n}\r\n\r\nasync function enrollStudents(data,otherData,m){\r\n    let students = [];\r\n    console.log(m)\r\n    data.map(d => {\r\n        console.log(d)\r\n        students.push({\r\n            student: d.student,\r\n            year: parseInt(otherData.year),\r\n            course: m.get(otherData.course),\r\n            semester: otherData.semester\r\n        })\r\n    })\r\n\r\n    return fetch('/api/course/enrollInCourse',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            students: students\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to Enroll Students\"\r\n        }\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\nexport {addCourse, getCourse,updateCourse,deleteCourse,addRating, enrollStudents,getEnrolledIn}","import { Star, StarOutlineOutlined } from '@material-ui/icons'\r\nimport React from 'react'\r\n\r\nexport default function Rating(props) {\r\n    return (\r\n        <span className=\"d-flex align-items-center\">\r\n            <span className=\"me-1\"  onMouseOver={() => {\r\n                if(props.readonly){\r\n                    return;\r\n                }else{\r\n                    props.setRating(parseInt(1));\r\n                }\r\n            }}>{(parseInt(props.value) >= 1) ? <Star style={{color: \"#ffff00\"}} /> : <StarOutlineOutlined style={{color: \"#ffff00\"}} />}</span>\r\n            <span className=\"me-1\"  onMouseOver={() => {\r\n                if(props.readonly){\r\n                    return;\r\n                }else{\r\n                    props.setRating(parseInt(2));\r\n                }\r\n            }}>{(parseInt(props.value) >= 2) ? <Star style={{color: \"#ffff00\"}} /> : <StarOutlineOutlined style={{color: \"#ffff00\"}} />}</span>\r\n            <span className=\"me-1\"  onMouseOver={() => {\r\n                if(props.readonly){\r\n                    return;\r\n                }else{\r\n                    props.setRating(3);\r\n                }\r\n            }}>{(parseInt(props.value) >= 3) ? <Star style={{color: \"#ffff00\"}} /> : <StarOutlineOutlined style={{color: \"#ffff00\"}} />}</span>\r\n            <span className=\"me-1\"  onMouseOver={() => {\r\n                if(props.readonly){\r\n                    return;\r\n                }else{\r\n                    props.setRating(4);\r\n                }\r\n            }}>{(parseInt(props.value) >= 4) ? <Star style={{color: \"#ffff00\"}} /> : <StarOutlineOutlined style={{color: \"#ffff00\"}} />}</span>\r\n            <span className=\"me-1\"  onMouseOver={() => {\r\n                if(props.readonly){\r\n                    return;\r\n                }else{\r\n                    props.setRating(5);\r\n                }\r\n            }}>{(parseInt(props.value) >= 5) ? <Star style={{color: \"#ffff00\"}} /> : <StarOutlineOutlined style={{color: \"#ffff00\"}} />}</span>\r\n        </span>\r\n    )\r\n}\r\n","import { Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle,TextField } from '@material-ui/core'\r\nimport { CancelOutlined, CancelSharp } from '@material-ui/icons'\r\nimport React, { useState, useContext, useEffect, useRef } from 'react'\r\nimport './course.scss'\r\nimport {GlobalLoadingContext} from '../../Context/GlobalLoadingContext'\r\nimport { toast } from 'react-toastify'\r\nimport { addCourse, updateCourse } from '../../Services/CourseServices'\r\n\r\nexport default function Operation(props) {\r\n\r\n    const [courseDetails,setCourseDetails] = useState(props.course || {\r\n        courseName: \"\",\r\n        courseCode: \"\",\r\n        credits: \"\",\r\n        prerequisites: [],\r\n        courseDescription: \"\",\r\n        faculty: \"\",\r\n        categoryIds: [],\r\n        schedule: [],\r\n        school: \"Seas\"\r\n    })\r\n    const init = {\r\n        courseName: \"\",\r\n        courseCode: \"\",\r\n        credits: \"\",\r\n        prerequisites: [],\r\n        courseDescription: \"\",\r\n        faculty: \"\",\r\n        categoryIds: [],\r\n        schedule: [],\r\n        school: \"Seas\"\r\n    }\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext);\r\n    const [dataIsValid,setDataIsValid] = useState(false);\r\n    const prerequisitesRef = useRef(\"\")\r\n    const categoryRef = useRef(\"\")\r\n    const ScheduleDay = useRef(\"\");\r\n    const start = useRef(\"\")\r\n    const end = useRef(\"\")\r\n\r\n    let Days = [\r\n        \"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setCourseDetails(props.course || init)\r\n    },[props.course])\r\n\r\n    useEffect(() => {\r\n        let isValid = true;\r\n        \r\n        Object.keys(courseDetails).map(key => {\r\n            \r\n            if(key!==\"prequisites\" && key!==\"ratings\" && (courseDetails[key]===\"\" || courseDetails[key].length===0)){\r\n                isValid=false;\r\n            }\r\n        })\r\n        setDataIsValid(isValid);\r\n    },[courseDetails])\r\n\r\n    let DeletePrerequisites = (pre) => () => {\r\n        let updatedList = [];\r\n        courseDetails.prerequisites.map(pred => {\r\n            if(pred !== pre){\r\n                updatedList.push(pred)\r\n            }\r\n        })\r\n\r\n        setCourseDetails({...courseDetails,prerequisites: updatedList})\r\n    }\r\n    let DeleteCategory = (cat) => () => {\r\n        let updatedList = [];\r\n        courseDetails.categoryIds.map(cate => {\r\n            if(cate !== cat){\r\n                updatedList.push(cate)\r\n            }\r\n        })\r\n\r\n        setCourseDetails({...courseDetails,categoryIds: updatedList})\r\n    }\r\n    let DeleteDay = (sche) => () => {\r\n        let updatedList = [];\r\n        courseDetails.schedule.map(sched => {\r\n            if(`${sche.day}-${sche.time}` !== `${sched.day}-${sched.time}`){\r\n                updatedList.push(sched)\r\n            }\r\n        })\r\n\r\n        setCourseDetails({...courseDetails,schedule: updatedList})\r\n    }\r\n\r\n    let AddPrerequisites = () => {\r\n        if(prerequisitesRef.current.value === \"\"){\r\n            return;\r\n        }\r\n        let updatedList = courseDetails.prerequisites;\r\n        updatedList.push(prerequisitesRef.current.value)\r\n\r\n        setCourseDetails({...courseDetails,prerequisites: updatedList})\r\n        prerequisitesRef.current.value = \"\"\r\n    }\r\n    let AddCategory = () => {\r\n        if(categoryRef.current.value === \"\"){\r\n            return;\r\n        }\r\n        let updatedList = courseDetails.categoryIds;\r\n        updatedList.push(categoryRef.current.value)\r\n\r\n        setCourseDetails({...courseDetails,categoryIds: updatedList})\r\n        categoryRef.current.value = \"\"\r\n    }\r\n    let AddDay = () => {\r\n        if(ScheduleDay.current.value === \"\" || start.current.value === \"\" || end.current.value === \"\"){\r\n            return;\r\n        }\r\n        let updatedList = courseDetails.schedule;\r\n        updatedList.push({\r\n            day: ScheduleDay.current.value,\r\n            time: `${start.current.value}-${end.current.value}` \r\n        })\r\n\r\n        setCourseDetails({...courseDetails,schedule: updatedList})\r\n        ScheduleDay.current.value = 0\r\n        start.current.value = \"\"\r\n        end.current.value = \"\"\r\n    }\r\n    console.log(courseDetails)\r\n\r\n    let AddCourse = async () => {\r\n        setGlobalLoading(true);\r\n        try{\r\n            let AddCourseResponse = await addCourse(courseDetails);\r\n            if(AddCourseResponse.status){\r\n                toast.success(AddCourseResponse.message)\r\n                setGlobalLoading(false)\r\n                await props.FetchCourses()\r\n                props.close()\r\n            }else{\r\n                console.log(AddCourseResponse)\r\n                toast.error(AddCourseResponse.message)\r\n                setGlobalLoading(false)\r\n            }\r\n        }catch(err){\r\n            toast.error(\"Unable to Add Course\")\r\n            setGlobalLoading(false)\r\n        }\r\n    }\r\n    let UpdateCourse = async () => {\r\n        setGlobalLoading(true)\r\n        try{\r\n            let UpdateCourseResponse = await updateCourse(courseDetails);\r\n            setGlobalLoading(false)\r\n            if(UpdateCourseResponse.status){\r\n                toast.success(UpdateCourseResponse.message)\r\n                await props.updateCourse(courseDetails);\r\n                setCourseDetails(init)\r\n                props.close();\r\n            }else{\r\n                toast.error(UpdateCourseResponse.message)\r\n            }\r\n        }catch(err){\r\n            setGlobalLoading(false)\r\n            toast.error(\"Unable to Update Course\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} fullWidth className=\"operation-dialog\">\r\n            <DialogActions><CancelSharp onClick={() => {setCourseDetails(init); props.close()}} style={{color: \"lightgrey\",cursor:\"pointer\"}}  /></DialogActions>\r\n            <DialogTitle className=\"dialog-title\">{props.course ? \"Update Course\" : \"Add Course\"}</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField \r\n                        label=\"Course Name\"\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={courseDetails.courseName}\r\n                        onChange={(e) => setCourseDetails({...courseDetails,courseName: e.target.value})}\r\n                        required\r\n                    />\r\n                    <TextField \r\n                        label=\"Course Code\"\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={courseDetails.courseCode}\r\n                        onChange={(e) => setCourseDetails({...courseDetails,courseCode: e.target.value})}\r\n                        required\r\n                    />\r\n                    <TextField \r\n                        label=\"Credits\"\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        type=\"Number\"\r\n                        value={courseDetails.credits}\r\n                        onChange={(e) => setCourseDetails({...courseDetails,credits: e.target.value})}\r\n                        required\r\n                    />\r\n                    <div className=\"my-2\">\r\n                        \r\n                        <div className=\"d-flex align-items-end\">\r\n                            <TextField label=\"Prerequisites\" inputRef={prerequisitesRef} />\r\n                            <Button variant=\"contained\" color=\"secondary\" className=\"ms-3\" onClick={AddPrerequisites} >Add</Button>\r\n                        </div>\r\n                        {courseDetails.prerequisites.map((pre,i) => \r\n                            <Chip\r\n                                className=\"my-2\"\r\n                                key={i}\r\n                                label={pre}\r\n                                onDelete={DeletePrerequisites(pre)}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <TextField \r\n                        label=\"Course Description\"\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        multiline\r\n                        rows={3}\r\n                        value={courseDetails.courseDescription}\r\n                        onChange={(e) => setCourseDetails({...courseDetails,courseDescription: e.target.value})}\r\n                        required\r\n                    />\r\n                    <TextField \r\n                        label=\"Faculty\"\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={courseDetails.faculty}\r\n                        onChange={(e) => setCourseDetails({...courseDetails,faculty: e.target.value})}\r\n                        required\r\n                    /> \r\n                    <TextField label=\"School\"\r\n                        select\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={courseDetails.school}\r\n                        onChange={(e) => setCourseDetails({...courseDetails,school: e.target.value})}\r\n                        required\r\n                        SelectProps={{\r\n                            native: true\r\n                        }} >\r\n                                <option value=\"Seas\">SEAS</option>\r\n                                <option value=\"Amsom\">AMSOM</option>\r\n                                <option value=\"Sas\">SAS</option>\r\n                    </TextField>\r\n                    <div className=\"my-2\">\r\n                        \r\n                        <div className=\"d-flex align-items-end\">\r\n                            <TextField label=\"Category\" required inputRef={categoryRef} />\r\n                            <Button variant=\"contained\" color=\"secondary\" className=\"ms-3\" onClick={AddCategory} >Add</Button>\r\n                        </div>\r\n                        {courseDetails.categoryIds.map((cat,i) => \r\n                            <Chip\r\n                                className=\"my-2\"\r\n                                key={i}\r\n                                label={cat}\r\n                                onDelete={DeleteCategory(cat)}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        \r\n                        <div className=\"d-flex mt-4 align-items-end\">\r\n                            <TextField label=\"Day\"\r\n                            select\r\n                            className=\"me-2\"\r\n                            SelectProps={{\r\n                                native: true\r\n                            }}\r\n                            inputRef={ScheduleDay} >\r\n\r\n                                {Days.map((day,i) => \r\n                                    <option value={i}>{day}</option>\r\n                                )}\r\n                            </TextField>\r\n                            <TextField label=\"ST\"  focused type=\"time\" className=\"me-2\" inputRef={start} />\r\n                            <TextField label=\"ET\" focused type=\"time\" inputRef={end} />\r\n                            <Button variant=\"contained\" color=\"secondary\" className=\"ms-3\" onClick={AddDay} >Add</Button>\r\n                        </div>\r\n                        {courseDetails.schedule.map((sche,i) => \r\n                            <Chip\r\n                                className=\"my-2\"\r\n                                key={i}\r\n                                label={`${Days[sche.day]}  ${sche.time}`}\r\n                                onDelete={DeleteDay(sche)}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </form>\r\n\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" onClick={() => {setCourseDetails(init);props.close()}}>Cancel</Button>\r\n                    <Button variant=\"contained\" onClick={props.course ? UpdateCourse : AddCourse} disabled={!dataIsValid} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import { Button, IconButton, InputAdornment, TextField } from '@material-ui/core'\r\nimport { Add, AddOutlined, DeleteOutlined, EditOutlined, ExpandLessOutlined, FirstPageOutlined, LastPageOutlined, NavigateBeforeOutlined, NavigateNextOutlined, RemoveOutlined, SearchOutlined, SentimentDissatisfiedOutlined } from '@material-ui/icons'\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport PulseLoader from 'react-spinners/PulseLoader'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport { GlobalLoadingContext } from '../../Context/GlobalLoadingContext'\r\nimport { currentUser } from '../../Services/AuthServices'\r\nimport { addRating, deleteCourse, getCourse } from '../../Services/CourseServices'\r\nimport ConfirmDialog from '../ConfirmDialog'\r\nimport Rating from '../Rating'\r\nimport './course.scss'\r\nimport Operation from './Operation'\r\n\r\nexport default function Courses() {\r\n\r\n    const [courses,setcourses] = useState(\"loading\");\r\n    const [loading,setLoading] = useState(false);\r\n    \r\n    const [openOperationDialog,setOpenOperationDialog] = useState(false);\r\n    const [courseDescriptionOpen,setCourseDescriptionOpen] = useState(-1);\r\n    const [courseRatingOpen,setCourseRatingOpen] = useState(-1);\r\n    const [courseUpdateDetails,setCourseUpdateDetails] = useState(false);\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext)\r\n    const [rating,setRating] = useState(1);\r\n    const [ConfirmDeleteDialog,setConfirmDeleteDialog] = useState({\r\n        open: false,\r\n        idx: false\r\n    });\r\n    const [user,setUser] = useState(currentUser.value)\r\n    const ratingRef = useRef(\"\")\r\n    const [page,setPage] = useState(0);\r\n    const searchTerm = useRef(\"\");\r\n    \r\n    \r\n\r\n    let Days = [\r\n        \"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"\r\n    ]\r\n\r\n    let CloseDialog = () => {\r\n        setOpenOperationDialog(false);\r\n        setCourseUpdateDetails(false);\r\n    }\r\n    let CloseConfirmDeleteDialog = () => {\r\n        setConfirmDeleteDialog({\r\n            open: false,\r\n            idx: false\r\n        })\r\n    }\r\n\r\n    let getTableScaling = () => {\r\n        let course = document.querySelectorAll(\".course-details\");\r\n        let coursesContainer = document.querySelector(\".course-container\");\r\n        let mainContainer = document.querySelector(\"#main-container\")\r\n        if(course !== undefined && coursesContainer!==undefined && course.length > 0){\r\n            if(mainContainer.offsetWidth < course[0].offsetWidth){\r\n                for(let i=0;i<course.length;i++){\r\n                    course[i].style.transform = `scaleX(${(mainContainer.offsetWidth / course[i].offsetWidth) - 0.003})`\r\n                    course[i].style.transformOrigin = \"center 0%\";\r\n                    \r\n                    \r\n                }\r\n            }\r\n            else{\r\n                for(let i=0;i<course.length;i++){\r\n                    course[i].style.transform = `scale(1)`\r\n                    course[i].style.transformOrigin = \"0% 0%\"\r\n                    coursesContainer.style.rowGap = \"0rem 0.8rem\"\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    console.log(courses)\r\n    let FetchCourses = async () => {\r\n        setLoading(true);\r\n        try{\r\n            \r\n            let CourseResponse = await getCourse(searchTerm.current.value);\r\n            setLoading(false);\r\n            if(CourseResponse.status){\r\n                setcourses(CourseResponse.courses)\r\n            }else{\r\n                setcourses([])\r\n                toast.error(\"Unable to get Courses\") \r\n            }\r\n        }catch(err){\r\n            setLoading(false);\r\n            toast.error(\"Unable to get Courses\")\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    \r\n\r\n    let UpdateCourseItem = (course) => {\r\n        let updatedList = courses.map(item => \r\n            {\r\n              if (item._id == course._id){\r\n                return course; \r\n              }\r\n              return item; \r\n            }); \r\n            \r\n        setcourses(updatedList);    \r\n    }\r\n\r\n    let DeleteCourse =async (idx) => {\r\n        CloseConfirmDeleteDialog()\r\n        setGlobalLoading(true);\r\n\r\n        try{\r\n            let DeleteCourseResponse = await deleteCourse(idx);\r\n            \r\n            if(DeleteCourseResponse.status){\r\n                toast.success(DeleteCourseResponse.message)\r\n                await FetchCourses()\r\n                setCourseDescriptionOpen(-1)\r\n                setGlobalLoading(false)\r\n            }else{\r\n                toast.error(DeleteCourseResponse.message)\r\n                setGlobalLoading(false)\r\n            }\r\n        }catch(err){\r\n            setGlobalLoading(false)\r\n            toast.error(\"Unable to Delete Course\")\r\n        }\r\n\r\n    }\r\n\r\n    let updateRating = (idx,comment,rate) => {\r\n        let updatedList = []\r\n        courses.map(course => {\r\n            \r\n            if(course._id === idx){\r\n               let temp = course;\r\n                temp.ratings.push({\r\n                    rating: rate,\r\n                    comment: comment\r\n                })\r\n                updatedList.push(temp);\r\n            }else{\r\n                updatedList.push(course);\r\n            }\r\n        })\r\n        setcourses(updatedList)\r\n    }\r\n\r\n    let AddRating = async (idx) => {\r\n        setGlobalLoading(true);\r\n\r\n        try{\r\n            let AddRatingResponse = await addRating(idx,ratingRef.current.value,rating);\r\n            \r\n            if(AddRatingResponse.status){\r\n                toast.success(AddRatingResponse.message)\r\n                updateRating(idx,ratingRef.current.value,rating);\r\n                ratingRef.current.value = \"\";\r\n                setRating(1)\r\n                setGlobalLoading(false)\r\n            }else{\r\n                toast.error(AddRatingResponse.message)\r\n                setGlobalLoading(false)\r\n            }\r\n        }catch(err){\r\n            console.log(err)\r\n            setGlobalLoading(false)\r\n            toast.error(\"Unable to Add Rating\")\r\n        }\r\n    }\r\n\r\n    const ChangeRating = (newRating) => {\r\n        setRating(parseInt(newRating))\r\n      };\r\n    let getRating = (course) => {\r\n        let rate = 0;\r\n        course.ratings.map((r,i) => {\r\n            rate += r.rating;\r\n        })\r\n        rate = parseInt(rate / course.ratings.length)\r\n        if(rate===0){\r\n            rate=1;\r\n        }\r\n        return rate;\r\n    }\r\n      useEffect(() => {\r\n        let AuthObservalble = currentUser.subscribe(data => setUser(data))\r\n    \r\n        return () => {\r\n          AuthObservalble.unsubscribe();\r\n        }\r\n      },[])\r\n    useEffect(() => {\r\n        FetchCourses();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        getTableScaling();\r\n\r\n        window.addEventListener('resize',getTableScaling)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize',getTableScaling)\r\n        }\r\n    },[courses])\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"w-100 mt-4 px-lg-5 px-md-4 px-1 d-flex justify-content-between align-items-center\">\r\n                <Button variant=\"contained\" onClick={() => setOpenOperationDialog(true)} startIcon={<AddOutlined />} color=\"primary\">Add Course</Button>\r\n                <TextField \r\n                    inputRef={searchTerm}\r\n                    label=\"Search\"\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment><SearchOutlined style={{cursor: 'pointer'}} onClick={() => FetchCourses()} /></InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            {courses===\"loading\" || loading ? <div className=\"w-100 mt-4 text-center\"><PulseLoader size={15} margin={2} color=\"#36D7B7\" /></div> : \r\n            <>\r\n            {courses.length===0 ? <h4 className={`text-center mt-5 no-data-found`}>No Data Found <SentimentDissatisfiedOutlined /></h4> :\r\n            <div className=\"w-100 my-4 d-flex flex-column justify-content-between align-items-center course-container px-lg-5 px-md-4 px-1 mx-auto\">\r\n                <div className=\"w-100 d-flex  align-items-center py-0 header\">\r\n                    {/* <span><Fab className={\"col-1 fab-button \" + (course.done ? \"completed\" :\"not_completed\")} ><AssignmentTurnedInOutlined className={(course.done ? \"completed\" :\"not_completed\")} /></Fab></span> */}\r\n                    <span className=\"col-1 text-center\">{\"#\"}</span>\r\n                    <span className=\"col-2 text-center\">{\"Code\"}</span>\r\n                    <span className=\"col-3 text-center\" style={{textAlign: \"right\"}}>{\"Name\"}</span>\r\n                    <span className=\"col-2 text-center\">{\"Credits\"}</span>\r\n                    <span className=\"col-3 text-center\" >{\"School\"}</span>\r\n                    <span className=\"col-1 text-center\"></span>\r\n                </div>\r\n               {courses.slice((10*page),Math.min(10*(page+1),courses.length)).map((course,i) => \r\n                        <span key={course._id} className=\"w-100 course-details\">\r\n                            <div className=\"w-100 d-flex  align-items-center course py-0\">\r\n                                <span className=\"col-1 text-center\">{i+1}</span>\r\n                                <span className=\"col-2 text-center\">{course.courseCode}</span>\r\n                                <span className=\"col-3 text-center\">{course.courseName}</span>\r\n                                <span className=\"col-2 text-center completed\" style={{backgroundColor:\"white\"}}><li>{course.credits}</li></span>\r\n                                <span className=\"col-3 text-center\" >{course.school?.toUpperCase()}</span>\r\n                                <span className=\"col-1 text-center\">{courseDescriptionOpen!==i ? <NavigateNextOutlined onClick={()=> setCourseDescriptionOpen(i)} style={{color: \"lightgrey\",cursor: 'pointer'}} /> : <ExpandLessOutlined onClick={()=> setCourseDescriptionOpen(-1)} style={{color: \"lightgrey\",cursor: 'pointer'}} />}</span>\r\n                            </div>\r\n                            {courseDescriptionOpen===i && <div className=\"w-100 mt-4 ps-3 mb-3 course-description\">\r\n\r\n                                {user.isAdmin && <div className=\"mt-3 mb-3 d-flex justify-content-end align-items-center flex-wrap me-3\">\r\n                                    <Button variant=\"outlined\" \r\n                                    onClick={async () => {\r\n                                        await setCourseUpdateDetails(course);\r\n                                        setOpenOperationDialog(true);\r\n                                    }} \r\n                                    startIcon={<EditOutlined />}>Edit</Button>\r\n                                    <Button variant=\"contained\" \r\n                                    onClick={() => {setConfirmDeleteDialog({\r\n                                        open: true,\r\n                                        idx: course._id\r\n                                    })}} \r\n                                    startIcon={<DeleteOutlined />} className=\"delete-btn\">Delete</Button>\r\n                                </div>}\r\n\r\n                                <h5>Description:</h5>\r\n                                <p className=\"px-3\">{course.courseDescription}</p>\r\n                                <h5 className=\"mt-2\">Prerequisites:</h5>\r\n                                <p className=\"px-3\">{course.prerequisites.map((pre,i) => \r\n                                    `${pre}${i!==course.prerequisites.length-1 ? \",\": \"\"}`\r\n                                )}</p>\r\n                                <h5>Faculty:</h5>\r\n                                <p className=\"px-3\">{course.faculty}</p>\r\n                                <h5 className=\"mt-2\">Category:</h5>\r\n                                <p className=\"px-3\">{course.categoryIds.map((pre,i) => \r\n                                    `${pre}${i!==course.categoryIds.length-1 ? \",\": \"\"}`\r\n                                )}</p>\r\n                                <h5 className=\"mt-2\">Schedule:</h5>\r\n                                <p className=\"px-3 d-flex flex-column\">{course.schedule.map((pre,i) => \r\n                                    <p>{`${Days[pre.day]}  ${pre.time}`}</p>\r\n                                )}</p>\r\n                                <h5 className=\"mt-2\">Ratings:</h5>\r\n\r\n                                {course.ratings.length!==0 &&\r\n                                <>\r\n                                <h4 className=\"ps-3 d-flex align-items-center\"><span className=\"me-2\">{getRating(course)}.0</span> <Rating readonly={true} value={getRating(course)} /></h4>\r\n                                \r\n                                {courseRatingOpen!==i ? <Button color=\"primary\" onClick={() => setCourseRatingOpen(i)} startIcon={<Add />}>Show Reviews</Button> : <Button color=\"primary\" onClick={() => setCourseRatingOpen(-1)} startIcon={<RemoveOutlined />}>Hide Reviews</Button>}\r\n                                </>}\r\n\r\n                                {courseRatingOpen===i && <div className=\"mt-3 d-flex flex-column rating-container\">\r\n                                    {course.ratings.map((rate,k) => \r\n                                        <span key={k} className=\"ms-3 d-flex flex-column\"><Rating readonly={true} value={rate.rating} /> {rate.comment}</span>\r\n                                    )}\r\n                                        \r\n                                </div>}\r\n                                <div className=\"w-100 d-flex align-items-end\">\r\n                                    <TextField \r\n                                        label=\"Comment\"\r\n                                        inputRef={ratingRef}\r\n                                    />\r\n                                    <Rating \r\n                                        value={rating}\r\n                                        setRating={(rate) => ChangeRating(rate)}\r\n                                    />\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => AddRating(course._id)}>Add Rating</Button>\r\n                                </div>\r\n                                    \r\n\r\n                            </div>}\r\n                        </span>\r\n                    )}\r\n\r\n                <div className=\"w-100 d-flex justify-content-end align-items-center py-0 me-2\">\r\n                    <IconButton size=\"small\" disabled={page===0} onClick={() => setPage(0)}><FirstPageOutlined /></IconButton>\r\n                    <IconButton size=\"small\" disabled={page===0} onClick={() => setPage(prev => prev - 1)}><NavigateBeforeOutlined /></IconButton>\r\n                    <IconButton size=\"small\" disabled={page===(Math.ceil((courses.length)/10) - 1)} onClick={() => setPage(prev => prev + 1)}><NavigateNextOutlined /></IconButton>\r\n                    <IconButton className=\"me-2\" size=\"small\" disabled={page===(Math.ceil((courses.length)/10) - 1)} onClick={() => setPage((Math.ceil((courses.length)/10) - 1))}><LastPageOutlined /></IconButton>\r\n                    {`${page+1} of ${Math.ceil((courses.length)/10)} page`}\r\n                </div>\r\n            </div>\r\n            }</>\r\n            }\r\n            <Operation open={openOperationDialog} FetchCourses={FetchCourses} updateCourse={UpdateCourseItem} course={courseUpdateDetails} close={CloseDialog} />\r\n            <ConfirmDialog open={ConfirmDeleteDialog.open} item={\"Course\"} close={CloseConfirmDeleteDialog} action={() => DeleteCourse(ConfirmDeleteDialog.idx)} />\r\n        </>\r\n    )\r\n}\r\n","async function getUsers(search=\"\"){\r\n    return fetch('/api/auth/get',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            search: search\r\n        })\r\n    }).then(res => res.json()).catch(err => {\r\n        return {\r\n            status: false,\r\n            message: \"Unable to get Students\"\r\n        }\r\n    })\r\n}\r\n\r\nexport {getUsers}","import { Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle,TextField } from '@material-ui/core'\r\nimport { CancelSharp } from '@material-ui/icons'\r\nimport React, { useState, useContext, useEffect, useRef } from 'react'\r\nimport './student.scss'\r\nimport {GlobalLoadingContext} from '../../Context/GlobalLoadingContext'\r\nimport { toast } from 'react-toastify'\r\nimport moment from 'moment'\r\nimport { enrollStudents } from '../../Services/CourseServices'\r\n\r\nexport default function Operation(props) {\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext);\r\n    const [students,setStudents] = useState([]);\r\n    const [otherData,setOtherData] = useState({\r\n        semester: \"Monsoon\",\r\n        year: moment().format('YYYY'),\r\n        course: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        let data = []\r\n        console.log(props)\r\n        setStudents([]);\r\n        \r\n            for(let i=0;i<props.students.length;i++){\r\n                if(props.select.current[i].checked){\r\n                    data.push(\r\n                        {\r\n                            student: props.students[i]._id,\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        \r\n        \r\n        setStudents(data);\r\n    },[])\r\n    let courseMap = new Map();\r\n    let courseData = [];\r\n    for(let i=0;i<props.courses.length;i++){\r\n        courseData.push(\r\n            <option key={props.courses[i]._id} value={props.courses[i].courseCode} />\r\n        )\r\n        courseMap.set(props.courses[i].courseCode,props.courses[i]._id)\r\n    }\r\n\r\n    let EnrollStudents = async () => {\r\n        setGlobalLoading(true);\r\n\r\n        try{\r\n            let response = await enrollStudents(students,otherData,courseMap);\r\n            if(response.status){\r\n                setGlobalLoading(false)\r\n                toast.success(response.message)\r\n                props.close();\r\n            }else{\r\n                setGlobalLoading(false)\r\n                toast.error(\"Unable to Enroll Students\")\r\n            }\r\n        }catch(err){\r\n            setGlobalLoading(false)\r\n            toast.error(\"Unable to Enroll Students\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} fullWidth className=\"operation-dialog\">\r\n            <DialogActions><CancelSharp onClick={() => {props.close()}} style={{color: \"lightgrey\",cursor:\"pointer\"}}  /></DialogActions>\r\n            <DialogTitle className=\"dialog-title\">{\"Enroll Students\"}</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <h5 className={students.length===0 ? \"text-danger\" : \"text-success\"}>{`${students.length} students are selected`}</h5>\r\n                    <TextField \r\n                        label=\"Year\"\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={otherData.year}\r\n                        required\r\n                    /> \r\n                    <TextField label=\"Course\"\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={otherData.course}\r\n                        onChange={(e) => setOtherData({...otherData,course: e.target.value})}\r\n                        required\r\n                        inputProps={{\r\n                            list: \"courses\"\r\n                        }}\r\n                    />\r\n                    <datalist id=\"courses\">\r\n                        {courseData}\r\n                    </datalist>\r\n                    {/* <Autocomplete\r\n                        value={otherData.course}\r\n                        options={props.courses}\r\n                        getOptionLabel={option => option}\r\n                        style={{ width: 300 }}\r\n                        renderInput={params => (\r\n                        <TextField\r\n                            {...params}\r\n                            label=\"Course\"\r\n                            required\r\n\r\n                        />\r\n                        )}\r\n                    /> */}\r\n                    <TextField label=\"Semester\"\r\n                        select\r\n                        className=\"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={otherData.semester}\r\n                        onChange={(e) => setOtherData({...otherData,semester: e.target.value})}\r\n                        required\r\n                        SelectProps={{\r\n                            native: true\r\n                        }} >\r\n                                <option value=\"Monsoon\">Monsoon</option>\r\n                                <option value=\"Winter\">Winter</option>\r\n                                <option value=\"Summer\">Summer</option>\r\n                    </TextField>\r\n                </form>\r\n\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" onClick={() => {props.close()}}>Cancel</Button>\r\n                    <Button variant=\"contained\" disabled={students.length===0} onClick={EnrollStudents} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\r\nimport { CancelSharp } from '@material-ui/icons';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { GlobalLoadingContext } from '../../Context/GlobalLoadingContext';\r\nimport { RegisterService } from '../../Services/AuthServices';\r\nimport './student.scss';\r\n\r\nexport default function RegisterStudent(props) {\r\n\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext);\r\n    const [detailsIsValid,setDetailsIsValid] = useState(false);\r\n    const [userDetails,setUserDetails] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        emailId: \"\",\r\n        isAdmin: false,\r\n        password: \"\",\r\n        enrollmentNumber: \"\",\r\n        confirmPassword: \"\",\r\n        programme: \"B.Tech\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        let isValid = true;\r\n        Object.keys(userDetails).map(key => {\r\n            if(key!==\"isAdmin\" && userDetails[key]===\"\"){\r\n                isValid=false;\r\n            }\r\n        })\r\n        if(userDetails.confirmPassword !== userDetails.password){\r\n            isValid=false;\r\n        }\r\n        setDetailsIsValid(isValid);\r\n    }, [userDetails])\r\n\r\n    let HandleRegister = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setGlobalLoading(true);\r\n        let RegsitrationResponse = await RegisterService(userDetails);\r\n        setGlobalLoading(false);\r\n        if(RegsitrationResponse.status){\r\n            \r\n            toast.success(RegsitrationResponse.message);\r\n            await props.FetchStudents()\r\n            props.close();\r\n        }\r\n        else{\r\n            toast.error(RegsitrationResponse.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} fullWidth className=\"operation-dialog\">\r\n            <DialogActions><CancelSharp onClick={() => {props.close()}} style={{color: \"lightgrey\",cursor:\"pointer\"}}  /></DialogActions>\r\n            <DialogTitle className=\"dialog-title\">{\"Add Student\"}</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        label= \"First Name\" \r\n                        required\r\n                        type = \"text\"\r\n                        className = \"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={userDetails.firstName}\r\n                        onChange={(e) => setUserDetails({...userDetails,firstName: e.target.value})}\r\n                    />\r\n                    <TextField\r\n                        label= \"Last Name\" \r\n                        required\r\n                        type = \"text\"\r\n                        className = \"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={userDetails.lastName}\r\n                        onChange={(e) => setUserDetails({...userDetails,lastName: e.target.value})}\r\n                    />\r\n                    <TextField\r\n                        label= \"Enrollment Number\" \r\n                        required\r\n                        type = \"text\"\r\n                        className = \"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={userDetails.enrollmentNumber}\r\n                        onChange={(e) => setUserDetails({...userDetails,enrollmentNumber: e.target.value})}\r\n                    />\r\n                    <TextField\r\n                        label= \"Programme\" \r\n                        required\r\n                        select\r\n                        SelectProps={{\r\n                            native:true\r\n                        }}\r\n                        className = \"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={userDetails.programme}\r\n                        onChange={(e) => setUserDetails({...userDetails,programme:e.target.value})}\r\n                    >\r\n                        <option value=\"B.Tech\">\r\n                            B.Tech \r\n                        </option>\r\n                        <option value=\"BS Hons\">\r\n                            Bs Hons \r\n                        </option>\r\n                        <option value=\"BA\">\r\n                            BA \r\n                        </option>\r\n                        <option value=\"B.B.A\">\r\n                            B.B.A \r\n                        </option>\r\n                    </TextField>\r\n                    <TextField\r\n                        label= \"Email\" \r\n                        required\r\n                        type = \"email\"\r\n                        className = \"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={userDetails.emailId}\r\n                        onChange={(e) => setUserDetails({...userDetails,emailId: e.target.value})}\r\n                    />\r\n                    <TextField\r\n                        label= \"Password\" \r\n                        required\r\n                        type = \"password\"\r\n                        className = \"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={userDetails.password}\r\n                        onChange={(e) => setUserDetails({...userDetails,password: e.target.value})}\r\n                    />\r\n                    <TextField\r\n                        label= \"Confirm Password\" \r\n                        required\r\n                        type = \"password\"\r\n                        className = \"my-2 col-lg-7 col-md-8 col-11\"\r\n                        value={userDetails.confirmPassword}\r\n                        onChange={(e) => setUserDetails({...userDetails,confirmPassword: e.target.value})}\r\n                    />\r\n                </form>\r\n\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" onClick={() => {props.close()}}>Cancel</Button>\r\n                    <Button variant=\"contained\" disabled={!detailsIsValid} onClick={HandleRegister} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import { Button, IconButton, InputAdornment, TextField } from '@material-ui/core'\r\nimport { AddOutlined, FirstPageOutlined, LastPageOutlined, NavigateBeforeOutlined, NavigateNextOutlined, SearchOutlined, SentimentDissatisfiedOutlined } from '@material-ui/icons'\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport PulseLoader from 'react-spinners/PulseLoader'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport { GlobalLoadingContext } from '../../Context/GlobalLoadingContext'\r\n\r\nimport { currentUser } from '../../Services/AuthServices'\r\nimport { getCourse } from '../../Services/CourseServices'\r\nimport { getUsers } from '../../Services/UserServices'\r\nimport Operation from './Operation'\r\nimport RegisterStudent from './RegisterStudent'\r\nimport './student.scss'\r\n\r\n\r\nexport default function StudentEnroll() {\r\n\r\n    const [students,setStudents] = useState(\"loading\");\r\n    const [loading,setLoading] = useState(false);\r\n    \r\n    const [openOperationDialog,setOpenOperationDialog] = useState(false);\r\n    const [openRegisterStudentDialog,setOpenRegisterStudentDialog] = useState(false);\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext);\r\n    const selectAllResf = useRef(\"\");\r\n    const [user,setUser] = useState(currentUser.value)\r\n    const selectRef = useRef([])\r\n    const [page,setPage] = useState(0);\r\n    const [courses,setcourses] = useState([]);\r\n    const searchTerm = useRef(\"\")\r\n    const [dataToshow,setDataToShow] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        let AuthObservalble = currentUser.subscribe(data => setUser(data))\r\n    \r\n        return () => {\r\n          AuthObservalble.unsubscribe();\r\n        }\r\n      },[])\r\n    let Days = [\r\n        \"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"\r\n    ]\r\n\r\n    let CloseDialog = () => {\r\n        setOpenOperationDialog(false);\r\n    }\r\n    let CloseRegisterStudentDialog = () => {\r\n        setOpenRegisterStudentDialog(false);\r\n    }\r\n\r\n    let getTableScaling = () => {\r\n        let student = document.querySelectorAll(\".student-details\");\r\n        let studentsContainer = document.querySelector(\".student-container\");\r\n        let mainContainer = document.querySelector(\"#main-container\")\r\n        if(student !== undefined && studentsContainer!==undefined && student.length > 0){\r\n            if(mainContainer.offsetWidth < student[0].offsetWidth){\r\n                for(let i=0;i<student.length;i++){\r\n                    student[i].style.transform = `scale(${(mainContainer.offsetWidth / student[i].offsetWidth) - 0.03})`\r\n                    student[i].style.transformOrigin = \"center 0%\";\r\n                }\r\n            }\r\n            else{\r\n                for(let i=0;i<student.length;i++){\r\n                    student[i].style.transform = `scale(1)`\r\n                    student[i].style.transformOrigin = \"0% 0%\"\r\n                    studentsContainer.style.rowGap = \"0rem 0.8rem\"\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    let FetchCourses = async () => {\r\n            getCourse().then(CourseResponse => {\r\n                if(CourseResponse.status){\r\n                    setcourses(CourseResponse.courses)\r\n                }else{\r\n                    setcourses([])\r\n                    toast.error(\"Unable to get Courses\") \r\n                }\r\n            }).catch(err => {\r\n                toast.error(\"Unable to get Courses\")\r\n            })\r\n        \r\n        \r\n    }\r\n    let FetchStudents = async () => {\r\n        setLoading(true);\r\n        try{\r\n            \r\n            let StudentResponse = await getUsers(searchTerm.current.value);\r\n            setLoading(false);\r\n            console.log(StudentResponse)\r\n            if(StudentResponse.status){\r\n                setStudents(StudentResponse.students)\r\n            }else{\r\n                setStudents([])\r\n                toast.error(\"Unable to get Students\") \r\n            }\r\n        }catch(err){\r\n            setLoading(false);\r\n            console.log(err)\r\n            toast.error(\"Unable to get Students\")\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    let ChangeSelect = (e,i) => {\r\n        let dp = students;\r\n        dp[i] = {...dp[i],checked: e.target.checked};\r\n        console.log(dp[i])\r\n        setStudents(dp);\r\n    }\r\n\r\n    let HandleSelectAll = () => {\r\n        for(let i=0;i<selectRef.current.length;i++){\r\n            selectRef.current[i].checked = selectAllResf.current.checked;\r\n        }\r\n    }\r\n     \r\n    useEffect(() => {\r\n        FetchCourses();\r\n        FetchStudents();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        getTableScaling();\r\n\r\n        window.addEventListener('resize',getTableScaling)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize',getTableScaling)\r\n        }\r\n    },[students])\r\n\r\n    \r\n    console.log(\"Select\",students)\r\n    return (\r\n        <>\r\n            <div className=\"w-100 mt-4 px-lg-5 px-md-4 px-1 d-flex flex-wrap justify-content-between align-items-center\">\r\n                <Button variant=\"contained\" \r\n                onClick={() => setOpenRegisterStudentDialog(true)}\r\n                 startIcon={<AddOutlined />} color=\"primary\">Add Student</Button>\r\n                <TextField \r\n                    inputRef={searchTerm}\r\n                    label=\"Search\"\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment><SearchOutlined style={{cursor: 'pointer'}} onClick={() => FetchStudents()} /></InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            {students===\"loading\" || loading ? <div className=\"w-100 mt-4 text-center\"><PulseLoader size={15} margin={2} color=\"#36D7B7\" /></div> : \r\n            <>\r\n            {students.length===0 ? <h4 className={`text-center mt-5 no-data-found`}>No Data Found <SentimentDissatisfiedOutlined /></h4> :\r\n            <div className=\"w-100 my-4 d-flex flex-column justify-content-between align-items-center student-container px-lg-5 px-md-4 px-1 mx-auto\">\r\n                <div className=\"w-100 d-flex  align-items-center py-0 header\">\r\n                    {/* <span><Fab className={\"col-1 fab-button \" + (course.done ? \"completed\" :\"not_completed\")} ><AssignmentTurnedInOutlined className={(course.done ? \"completed\" :\"not_completed\")} /></Fab></span> */}\r\n                    <span className=\"col-1 text-center\"><input ref={selectAllResf} type=\"checkbox\" onChange={(e) => HandleSelectAll()} style={{color: '#0d6efd'}} /></span>\r\n                    <span className=\"col-3 text-center\">{\"Id\"}</span>\r\n                    <span className=\"col-3 text-center\" style={{textAlign: \"right\"}}>{\"Name\"}</span>\r\n                    <span className=\"col-4 text-center\">{\"Email-id\"}</span>\r\n                    <span className=\"col-1 text-center\">{\"Programme\"}</span>\r\n                </div>\r\n                {students.map((student,i) => \r\n                    \r\n                    \r\n                    <span key={student._id} className={\"w-100 student-details \"+(!((i>=(10*page)) && i<(Math.min(10*(page+1),students.length))) ? \"hindrence\" : \"\")}>\r\n                        <div className=\"w-100 d-flex  align-items-center student py-0\">\r\n                            <span className=\"col-1 text-center\">{<input type=\"checkbox\" ref={el => selectRef.current[i]=el} />}</span>\r\n                            <span className=\"col-3 text-center\">{student.enrollmentNumber}</span>\r\n                            <span className=\"col-3 text-center\">{student.firstName}</span>\r\n                            <span className=\"col-4 text-center\" >{student.emailId}</span>\r\n                            <span className=\"col-1 text-center\" >{student.programme}</span>\r\n                        </div>\r\n                    </span>\r\n                )}    \r\n                <div className=\"w-100 d-flex justify-content-between align-items-center py-0 mx-2\">\r\n                    <Button variant=\"contained\" onClick={async () => {\r\n                        setOpenOperationDialog(true)\r\n                        }} color=\"secondary\">Action</Button>\r\n\r\n                    <div className=\"d-flex align-items-center\"><IconButton size=\"small\" disabled={page===0} onClick={() => setPage(0)}><FirstPageOutlined /></IconButton>\r\n                    <IconButton size=\"small\" disabled={page===0} onClick={() => setPage(prev => prev - 1)}><NavigateBeforeOutlined /></IconButton>\r\n                    <IconButton size=\"small\" disabled={page===(Math.ceil((students.length)/10) - 1)} onClick={() => setPage(prev => prev + 1)}><NavigateNextOutlined /></IconButton>\r\n                    <IconButton className=\"me-2\" size=\"small\" disabled={page===(Math.ceil((students.length)/10) - 1)} onClick={() => setPage((Math.ceil((students.length)/10) - 1))}><LastPageOutlined /></IconButton>\r\n                    {`${page+1} of ${Math.ceil((students.length)/10)} page`}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            }\r\n            \r\n            </>\r\n            }\r\n            {openRegisterStudentDialog && <RegisterStudent FetchStudents={FetchStudents} open={openRegisterStudentDialog} close={CloseRegisterStudentDialog} />}\r\n            {openOperationDialog && <Operation open={openOperationDialog} students={students} select={selectRef} courses={courses} close={CloseDialog} />}\r\n            {/* <ConfirmDialog open={ConfirmDeleteDialog.open} item={\"Course\"} close={CloseConfirmDeleteDialog} action={() => DeleteCourse(ConfirmDeleteDialog.idx)} /> */}\r\n        </>\r\n    )\r\n}\r\n","import { Button, IconButton, TextField } from '@material-ui/core'\r\nimport { Add, CheckCircle, ExpandLessOutlined, FirstPageOutlined, LastPageOutlined, NavigateBeforeOutlined, NavigateNextOutlined, RemoveOutlined, SentimentDissatisfiedOutlined } from '@material-ui/icons'\r\n\r\nimport * as moment from 'moment'\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport PulseLoader from 'react-spinners/PulseLoader'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport { GlobalLoadingContext } from '../../Context/GlobalLoadingContext'\r\n\r\n\r\nimport { currentUser } from '../../Services/AuthServices'\r\nimport { addRating, getEnrolledIn } from '../../Services/CourseServices'\r\nimport Rating from '../Rating'\r\nimport './myCourse.scss'\r\n\r\nexport default function MyCourses() {\r\n\r\n    const [courses,setcourses] = useState(\"loading\");\r\n    const [loading,setLoading] = useState(false);\r\n    \r\n    \r\n    const [courseDescriptionOpen,setCourseDescriptionOpen] = useState(-1);\r\n    const [courseRatingOpen,setCourseRatingOpen] = useState(-1);\r\n    \r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext)\r\n    const [rating,setRating] = useState(1);\r\n    \r\n    \r\n    \r\n    \r\n    const [user,setUser] = useState(currentUser.value)\r\n    const ratingRef = useRef(\"\")\r\n    const [page,setPage] = useState(0);\r\n    const [credits,setCredits] = useState(0)\r\n    const [semester,setSemester] = useState(\"\");\r\n    const [year,setYear] = useState(parseInt(moment().format('YYYY')))\r\n    useEffect(() => {\r\n        let AuthObservalble = currentUser.subscribe(data => setUser(data))\r\n    \r\n        return () => {\r\n          AuthObservalble.unsubscribe();\r\n        }\r\n      },[])\r\n\r\n    let Days = [\r\n        \"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"\r\n    ]\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    let getTableScaling = () => {\r\n        let course = document.querySelectorAll(\".course-details\");\r\n        let coursesContainer = document.querySelector(\".course-container\");\r\n        let mainContainer = document.querySelector(\"#main-container\")\r\n        if(course !== undefined && coursesContainer!==undefined && course.length > 0){\r\n            if(mainContainer.offsetWidth < course[0].offsetWidth){\r\n                for(let i=0;i<course.length;i++){\r\n                    course[i].style.transform = `scaleX(${(mainContainer.offsetWidth / course[i].offsetWidth) - 0.003})`\r\n                    course[i].style.transformOrigin = \"center 0%\";\r\n                    \r\n                    \r\n                }\r\n            }\r\n            else{\r\n                for(let i=0;i<course.length;i++){\r\n                    course[i].style.transform = `scale(1)`\r\n                    course[i].style.transformOrigin = \"0% 0%\"\r\n                    coursesContainer.style.rowGap = \"0rem 0.8rem\"\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    console.log(courses)\r\n    let FetchCourses = async () => {\r\n        if(user!==\"loading\" && user!==null){\r\n\r\n        \r\n        setLoading(true);\r\n        try{\r\n            let CourseResponse = await getEnrolledIn(semester,year);\r\n            setLoading(false);\r\n            console.log(CourseResponse)\r\n            if(CourseResponse.status){\r\n                let temp = 0;\r\n                CourseResponse.enrollments.map(c => {\r\n                    temp += parseInt(c.course[0].credits)\r\n                })\r\n                setCredits(temp)\r\n                setcourses(CourseResponse.enrollments)\r\n\r\n            }else{\r\n                setcourses([])\r\n                toast.error(\"Unable to get Courses\") \r\n            }\r\n        }catch(err){\r\n            setLoading(false);\r\n            toast.error(\"Unable to get Courses\")\r\n        }\r\n        }\r\n        \r\n    }\r\n\r\n    let updateRating = (idx,comment,rate) => {\r\n        let updatedList = []\r\n        courses.map(course => {\r\n            \r\n            if(course._id === idx){\r\n               let temp = course;\r\n                temp.ratings.push({\r\n                    rating: rate,\r\n                    comment: comment\r\n                })\r\n                updatedList.push(temp);\r\n            }else{\r\n                updatedList.push(course);\r\n            }\r\n        })\r\n        setcourses(updatedList)\r\n    }\r\n\r\n    let AddRating = async (idx) => {\r\n        setGlobalLoading(true);\r\n\r\n        try{\r\n            let AddRatingResponse = await addRating(idx,ratingRef.current.value,rating);\r\n            \r\n            if(AddRatingResponse.status){\r\n                toast.success(AddRatingResponse.message)\r\n                updateRating(idx,ratingRef.current.value,rating);\r\n                ratingRef.current.value = \"\";\r\n                setRating(1)\r\n                setGlobalLoading(false)\r\n            }else{\r\n                toast.error(AddRatingResponse.message)\r\n                setGlobalLoading(false)\r\n            }\r\n        }catch(err){\r\n            console.log(err)\r\n            setGlobalLoading(false)\r\n            toast.error(\"Unable to Add Rating\")\r\n        }\r\n    }\r\n\r\n    const ChangeRating = (newRating) => {\r\n        setRating(parseInt(newRating))\r\n      };\r\n    let getRating = (course) => {\r\n        let rate = 0;\r\n        course.ratings.map((r,i) => {\r\n            rate += r.rating;\r\n        })\r\n        rate = parseInt(rate / course.ratings.length)\r\n        if(rate===0){\r\n            rate=1;\r\n        }\r\n        return rate;\r\n    }\r\n     \r\n    useEffect(() => {\r\n        FetchCourses();\r\n    },[semester,year])\r\n\r\n    useEffect(() => {\r\n        getTableScaling();\r\n\r\n        window.addEventListener('resize',getTableScaling)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize',getTableScaling)\r\n        }\r\n    },[courses])\r\n\r\n    \r\n    return (\r\n        <>\r\n        {courses===\"loading\" || loading ? <div className=\"w-100 mt-4 text-center\"><PulseLoader size={15} margin={2} color=\"#36D7B7\" /></div> :\r\n            <>\r\n            <div className=\"w-100 mt-4 px-lg-5 px-md-4 px-1 d-flex justify-content-between align-items-end\">\r\n                <Button className=\"credits-button\" variant=\"contained\" startIcon={<CheckCircle style={{color: \"rgb(99, 231, 134)\"}} />} disabled>\r\n                    credits: {credits}\r\n                </Button>\r\n                <div className=\"d-flex flex-wrap align-items-start mt-2\">\r\n                    <TextField\r\n                        label=\"Semester\"\r\n                        select\r\n                        focused\r\n                        value={semester}\r\n                        className=\"me-2 mb-2\"\r\n                        onChange={(e) => setSemester(e.target.value)}\r\n                        SelectProps={{\r\n                            native: true\r\n                        }}\r\n                    >\r\n                        <option value=\"\">All</option>\r\n                        <option value=\"Monsoon\">Monsoon</option>\r\n                        <option value=\"Winter\">Winter</option>\r\n                        <option value=\"Summer\">Summer</option>\r\n                    </TextField>\r\n                    <TextField\r\n                        label=\"Year\"\r\n                        select\r\n                        focused\r\n                        value={year}\r\n                        onChange={(e) => setYear(e.target.value)}\r\n                        SelectProps={{\r\n                            native: true\r\n                        }}\r\n                    >\r\n                        <option value=\"\">All</option>\r\n                        <option value={parseInt(moment().format('YYYY')) - 3}>{parseInt(moment().format('YYYY')) - 3}</option>\r\n                        <option value={parseInt(moment().format('YYYY')) - 2}>{parseInt(moment().format('YYYY')) - 2}</option>\r\n                        <option value={parseInt(moment().format('YYYY')) - 1}>{parseInt(moment().format('YYYY')) - 1}</option>\r\n                        <option value={parseInt(moment().format('YYYY'))}>{parseInt(moment().format('YYYY'))}</option>\r\n                        <option value={parseInt(moment().format('YYYY')) + 1}>{parseInt(moment().format('YYYY')) + 1}</option>\r\n                        <option value={parseInt(moment().format('YYYY')) + 2}>{parseInt(moment().format('YYYY')) + 2}</option>\r\n                        <option value={parseInt(moment().format('YYYY')) + 3}>{parseInt(moment().format('YYYY')) + 3}</option>\r\n                    </TextField>\r\n                </div>\r\n                \r\n            </div>\r\n             \r\n            \r\n            {courses.length===0 ? <h4 className={`text-center mt-5 no-data-found`}>No Data Found <SentimentDissatisfiedOutlined /></h4> :\r\n            <div className=\"w-100 my-4 d-flex flex-column justify-content-between align-items-center course-container px-lg-5 px-md-4 px-1 mx-auto\">\r\n                <div className=\"w-100 d-flex  align-items-center py-0 header\">\r\n                    {/* <span><Fab className={\"col-1 fab-button \" + (course.done ? \"completed\" :\"not_completed\")} ><AssignmentTurnedInOutlined className={(course.done ? \"completed\" :\"not_completed\")} /></Fab></span> */}\r\n                    <span className=\"col-1 text-center\">{\"#\"}</span>\r\n                    <span className=\"col-2 text-center\">{\"Code\"}</span>\r\n                    <span className=\"col-3 text-center\">{\"Name\"}</span>\r\n                    <span className=\"col-2 text-center\">{\"Credits\"}</span>\r\n                    <span className=\"col-2 text-center\" >{\"Semester\"}</span>\r\n                    <span className=\"col-1 text-center\" >{\"Year\"}</span>\r\n                    <span className=\"col-1 text-center\"></span>\r\n                </div>\r\n               {courses.slice((10*page),Math.min(10*(page+1),courses.length)).map((course,i) => \r\n                        <span key={course._id} className=\"w-100 course-details\">\r\n                            <div className=\"w-100 d-flex  align-items-center course py-0\">\r\n                                <span className=\"col-1 text-center\">{i+1}</span>\r\n                                <span className=\"col-2 text-center\">{course.course[0].courseCode}</span>\r\n                                <span className=\"col-3 text-center\">{course.course[0].courseName}</span>\r\n                                <span className=\"col-2 text-center completed\" style={{backgroundColor:\"white\"}}><li>{course.course[0].credits}</li></span>\r\n                                <span className=\"col-2 text-center\" >{course.semester}</span>\r\n                                <span className=\"col-1 text-center\" >{course.year}</span>\r\n                                <span className=\"col-1 text-center\">{courseDescriptionOpen!==i ? <NavigateNextOutlined onClick={()=> setCourseDescriptionOpen(i)} style={{color: \"lightgrey\",cursor: 'pointer'}} /> : <ExpandLessOutlined onClick={()=> setCourseDescriptionOpen(-1)} style={{color: \"lightgrey\",cursor: 'pointer'}} />}</span>\r\n                            </div>\r\n                            {courseDescriptionOpen===i && <div className=\"w-100 mt-4 ps-3 mb-3 course-description\">\r\n\r\n                                <h5>Description:</h5>\r\n                                <p className=\"px-3\">{course.course[0].courseDescription}</p>\r\n                                <h5 className=\"mt-2\">Prerequisites:</h5>\r\n                                <p className=\"px-3\">{course.course[0].prerequisites.map((pre,i) => \r\n                                    `${pre}${i!==(course.course[0].prerequisites.length - 1) ? \",\": \"\"}`\r\n                                )}</p>\r\n                                <h5>Faculty:</h5>\r\n                                <p className=\"px-3\">{course.course[0].faculty}</p>\r\n                                <h5 className=\"mt-2\">Category:</h5>\r\n                                <p className=\"px-3\">{course.course[0].categoryIds.map((pre,i) => \r\n                                    `${pre}${i!==course.course[0].categoryIds.length-1 ? \",\": \"\"}`\r\n                                )}</p>\r\n                                <h5 className=\"mt-2\">Schedule:</h5>\r\n                                <p className=\"px-3 d-flex flex-column\">{course.course[0].schedule.map((pre,i) => \r\n                                    <p>{`${Days[pre.day]}  ${pre.time}`}</p>\r\n                                )}</p>\r\n                                <h5 className=\"mt-2\">Ratings:</h5>\r\n\r\n                                {course.course[0].ratings.length!==0 &&\r\n                                <>\r\n                                <h4 className=\"ps-3 d-flex align-items-center\"><span className=\"me-2\">{getRating(course.course[0])}.0</span> <Rating readonly={true} value={getRating(course.course[0])} /></h4>\r\n                                \r\n                                {courseRatingOpen!==i ? <Button color=\"primary\" onClick={() => setCourseRatingOpen(i)} startIcon={<Add />}>Show Reviews</Button> : <Button color=\"primary\" onClick={() => setCourseRatingOpen(-1)} startIcon={<RemoveOutlined />}>Hide Reviews</Button>}\r\n                                </>}\r\n\r\n                                {courseRatingOpen===i && <div className=\"mt-3 d-flex flex-column rating-container\">\r\n                                    {course.course[0].ratings.map((rate,k) => \r\n                                        <span key={k} className=\"ms-3 d-flex flex-column\"><Rating readonly={true} value={rate.rating} /> {rate.comment}</span>\r\n                                    )}\r\n                                        \r\n                                </div>}\r\n                                <div className=\"w-100 d-flex align-items-end\">\r\n                                    <TextField \r\n                                        label=\"Comment\"\r\n                                        inputRef={ratingRef}\r\n                                    />\r\n                                    <Rating \r\n                                        value={rating}\r\n                                        setRating={(rate) => ChangeRating(rate)}\r\n                                    />\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => AddRating(course._id)}>Add Rating</Button>\r\n                                </div>\r\n                                    \r\n\r\n                            </div>}\r\n                       \r\n                        </span>\r\n                    \r\n                    )}\r\n\r\n                <div className=\"w-100 d-flex justify-content-end align-items-center py-0 me-2\">\r\n                    <IconButton size=\"small\" disabled={page===0} onClick={() => setPage(0)}><FirstPageOutlined /></IconButton>\r\n                    <IconButton size=\"small\" disabled={page===0} onClick={() => setPage(prev => prev - 1)}><NavigateBeforeOutlined /></IconButton>\r\n                    <IconButton size=\"small\" disabled={page===(Math.ceil((courses.length)/10) - 1)} onClick={() => setPage(prev => prev + 1)}><NavigateNextOutlined /></IconButton>\r\n                    <IconButton className=\"me-2\" size=\"small\" disabled={page===(Math.ceil((courses.length)/10) - 1)} onClick={() => setPage((Math.ceil((courses.length)/10) - 1))}><LastPageOutlined /></IconButton>\r\n                    {`${page+1} of ${Math.ceil((courses.length)/10)} page`}\r\n                </div>\r\n            </div>\r\n            }</>\r\n            }\r\n            {/* <Operation open={openOperationDialog} FetchCourses={FetchCourses} updateCourse={UpdateCourseItem} course={courseUpdateDetails} close={CloseDialog} /> */}\r\n            {/* <ConfirmDialog open={ConfirmDeleteDialog.open} item={\"Course\"} close={CloseConfirmDeleteDialog} action={() => DeleteCourse(ConfirmDeleteDialog.idx)} /> */}\r\n        </>\r\n    )\r\n}\r\n","import Todo from \"./components/Todos/Todo\"\r\nimport Courses from \"./components/Courses/Courses\"\r\nimport StudentEnroll from \"./components/StudentEnroll/StudentEnroll\"\r\nimport MyCourses from \"./components/MyCourses/MyCourses\"\r\n\r\nexport const NavigationAdmin = [\r\n    \"Todos\",\r\n    \"Courses\",\r\n    \"Students\"\r\n]\r\n\r\nexport const Navigations = [\r\n    \"Todos\",\r\n    \"My Courses\",\r\n    \"Course\",\r\n    \"Time Table\"\r\n]\r\n\r\nexport const NavigationComponent = [\r\n    <Todo />,\r\n    <MyCourses />,\r\n    <Courses />\r\n]\r\n\r\nexport const NavigationComponentAdmin = [\r\n    <Todo />,\r\n    <Courses />,\r\n    <StudentEnroll />\r\n]\r\n","import { AppBar, Avatar, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { ExpandMoreOutlined, MenuOutlined } from '@material-ui/icons';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { GlobalLoadingContext } from '../Context/GlobalLoadingContext';\r\nimport { HomeContext } from '../Context/HomeContext';\r\nimport { NavigationAdmin, Navigations } from '../Navigations';\r\nimport { currentUser, Logout } from '../Services/AuthServices';\r\nimport './home.scss';\r\nimport { useStyles } from './MaterialStyles';\r\n\r\nexport default function NavBar(props) {\r\n\r\n    const classes = useStyles();\r\n    const [user,setUser] = useState(\"loading\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const route = useLocation();\r\n    const path = route.pathname.split('/')[1];\r\n    const { setGlobalLoading } = useContext(GlobalLoadingContext)\r\n    const {navigator} = useContext(HomeContext)\r\n\r\n    useEffect(() => {\r\n        let AuthObservable = currentUser.subscribe((data) => {\r\n          setUser(data);\r\n        })\r\n        return () => {\r\n          AuthObservable.unsubscribe()\r\n        }\r\n    })\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n\r\n        <AppBar className={\"appBar px-2 py-1\"}>\r\n            <div className=\"d-flex px-lg-4 px-md-3 px-1 justify-content-between align-items-center navbar\">\r\n                <div className=\"d-flex align-items-center\">\r\n                    <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    edge=\"start\"\r\n                    onClick={props.handleDrawerToggle}\r\n                    className={classes.menuButton+ \" collapsable-bars\"}\r\n                    >\r\n                        <MenuOutlined style={{color:\"rgba(197, 199, 205, 1)\"}} />\r\n                    </IconButton>\r\n                    <h3>{user.isAdmin ? NavigationAdmin[navigator] : Navigations[navigator]}</h3>\r\n                </div>\r\n                <div className=\"d-flex align-items-center navbar-user-icon\">\r\n                    <span className=\"d-flex align-items-center\" onClick={handleClick}>\r\n                        <Avatar className={'avatar'} variant=\"circle\">{user && user.emailId?.split(' ').map(word => word.charAt(0).toUpperCase())}</Avatar>\r\n                        <ExpandMoreOutlined style={{color:\"rgba(54, 123, 245, 1)\"}} />\r\n                    </span>\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                        style={{marginTop: \"30px\"}}\r\n                    >\r\n                        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={() => Logout()}>Logout</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            </div>\r\n        </AppBar>\r\n\r\n        \r\n            \r\n          \r\n        \r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport './home.scss'\r\nimport { useStyles } from './MaterialStyles';\r\nimport PulseLoader from 'react-spinners/PulseLoader'\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport SideNavBar from './SideNavBar';\r\nimport NavBar from './NavBar';\r\nimport { Route, Switch } from 'react-router';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { cur, currentUser } from '../Services/AuthServices';\r\nimport { HomeContext } from '../Context/HomeContext';\r\nimport Todo from './Todos/Todo';\r\nimport {NavigationComponent,NavigationComponentAdmin} from '../Navigations'\r\n\r\nfunction Home(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const {navigator} = useContext(HomeContext)  \r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const [user,setUser] = useState(currentUser.value)\r\n    \r\n    useEffect(() => {\r\n    let AuthObservalble = currentUser.subscribe(data => setUser(data))\r\n\r\n    return () => {\r\n      AuthObservalble.unsubscribe();\r\n    }\r\n  },[])\r\n  \r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  useEffect(() => {\r\n    if(currentUser.value === null){\r\n      window.location = \"/\"\r\n    }\r\n  },[])\r\n\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <NavBar handleDrawerToggle={handleDrawerToggle} />\r\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              container={container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true, \r\n              }}\r\n            >\r\n              <SideNavBar></SideNavBar>\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              <SideNavBar></SideNavBar>\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className=\"w-100 mt-lg-5 mt-md-5 mt-4 pt-lg-3 pt-md-3 pt-4 main-container\" id=\"main-container\">\r\n              {(user===\"loading\" || user===null) ? <div className=\"w-100 mt-4 text-center\"><PulseLoader size={15} margin={2} color=\"#36D7B7\" /></div> : <>{user.isAdmin ? NavigationComponentAdmin[navigator] : NavigationComponent[navigator]} </>}\r\n          </div>\r\n        </main>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import { Button, TextField } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { GlobalLoadingContext } from '../Context/GlobalLoadingContext';\r\nimport { currentUser, LoginService } from '../Services/AuthServices';\r\n\r\nexport default function Login() {\r\n    \r\n    const [user,setUser] = useState(currentUser.value);\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext);\r\n    const [userDetails,setUserDetails] = useState({\r\n        emailId: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        let AuthObservalble = currentUser.subscribe(data => setUser(data))\r\n\r\n        return () => {\r\n            AuthObservalble.unsubscribe();\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(user!==null){\r\n            window.location = \"/\";\r\n        }\r\n    },[])\r\n\r\n    let HandleLogin =async (e) => {\r\n        e.preventDefault();\r\n\r\n        setGlobalLoading(true);\r\n        let LoginResponse = await LoginService(userDetails);\r\n        setGlobalLoading(false);\r\n        if(LoginResponse.status){\r\n            \r\n            toast.success(LoginResponse.message);\r\n            window.location = \"/\"\r\n        }\r\n        else{\r\n            toast.error(LoginResponse.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {user===null && <div className=\"d-flex justify-content-center align-items-center login-page py-4\">\r\n            <form onSubmit={(e) => HandleLogin(e)} className=\"col-lg-5 col-md-5 col-11 px-lg-5 px-md-4 px-2 shadow py-5 mb-5\" >\r\n                <div className=\"text-center\"><img className=\"mx-auto\" height={150} src=\"guide.png\"></img></div>\r\n                <h1 className=\"text-center py-2\">Login</h1>\r\n                <TextField\r\n                    label= \"Email\" \r\n                    required\r\n                    type = \"email\"\r\n                    className = \"mx-3 mt-3 mb-3 col-10\"\r\n                    value={userDetails.emailId}\r\n                    onChange={(e) => setUserDetails({...userDetails,emailId: e.target.value})}\r\n                />\r\n                <TextField\r\n                    label= \"Password\" \r\n                    required\r\n                    type = \"password\"\r\n                    className = \"mx-3 mb-5 col-10\"\r\n                    value={userDetails.password}\r\n                    onChange={(e) => setUserDetails({...userDetails,password: e.target.value})}\r\n                />\r\n                <div className=\"d-flex justify-content-center align-items-enter\">\r\n                    <Button type = \"submit\" variant=\"contained\" disabled={userDetails.emailId===\"\" || userDetails.password===\"\"} className=\"text-center mx-auto w-50\" color=\"primary\">Submit</Button>\r\n                </div>\r\n\r\n                <div className=\"w-100 my-3 divider\"></div>\r\n\r\n                <p className=\"text-center\">Create account <Link to=\"/register\">Register</Link></p>\r\n                \r\n            </form>\r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { GlobalLoadingContext } from '../Context/GlobalLoadingContext';\r\nimport { currentUser, RegisterService } from '../Services/AuthServices';\r\n\r\nexport default function Register() {\r\n\r\n    const [user,setUser] = useState(currentUser.value);\r\n    const {setGlobalLoading} = useContext(GlobalLoadingContext);\r\n    const [detailsIsValid,setDetailsIsValid] = useState(false);\r\n    const [userDetails,setUserDetails] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        emailId: \"\",\r\n        isAdmin: false,\r\n        password: \"\",\r\n        enrollmentNumber: \"\",\r\n        confirmPassword: \"\",\r\n        programme: \"B.Tech\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        let AuthObservalble = currentUser.subscribe(data => setUser(data))\r\n\r\n        return () => {\r\n            AuthObservalble.unsubscribe();\r\n        }\r\n    },[])\r\n    \r\n    useEffect(() => {\r\n        let isValid = true;\r\n        Object.keys(userDetails).map(key => {\r\n            if(key!==\"isAdmin\" && userDetails[key]===\"\"){\r\n                isValid=false;\r\n            }\r\n        })\r\n        if(userDetails.confirmPassword !== userDetails.password){\r\n            isValid=false;\r\n        }\r\n        setDetailsIsValid(isValid);\r\n    }, [userDetails])\r\n\r\n    useEffect(() => {\r\n        if(user!==null){\r\n            window.location = \"/\";\r\n        }\r\n    },[])\r\n\r\n    let HandleRegister =async (e) => {\r\n        e.preventDefault();\r\n\r\n        setGlobalLoading(true);\r\n        let RegsitrationResponse = await RegisterService(userDetails);\r\n        setGlobalLoading(false);\r\n        if(RegsitrationResponse.status){\r\n            \r\n            toast.success(RegsitrationResponse.message);\r\n            window.location = \"/login\"\r\n        }\r\n        else{\r\n            toast.error(RegsitrationResponse.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {user===null && <div className=\"d-flex justify-content-center align-items-center register-page\">\r\n            <form onSubmit={(e) => HandleRegister(e)} className=\"col-lg-5 col-md-5 col-11 px-lg-5 px-md-4 px-2 mt-5 shadow py-5\" >\r\n                \r\n            <div className=\"text-center\"><img className=\"mx-auto\" height={150} src=\"guide.png\"></img></div>\r\n            <h1 className=\"text-center py-2\" color=\"secondary\">Regsiter</h1>\r\n                <TextField\r\n                    label= \"First Name\" \r\n                    required\r\n                    type = \"text\"\r\n                    className = \"mx-3 mt-3 mb-3 col-10\"\r\n                    value={userDetails.firstName}\r\n                    onChange={(e) => setUserDetails({...userDetails,firstName: e.target.value})}\r\n                />\r\n                <TextField\r\n                    label= \"Last Name\" \r\n                    required\r\n                    type = \"text\"\r\n                    className = \"mx-3 mb-3 col-10\"\r\n                    value={userDetails.lastName}\r\n                    onChange={(e) => setUserDetails({...userDetails,lastName: e.target.value})}\r\n                />\r\n                <TextField\r\n                    label= \"Enrollment Number\" \r\n                    required\r\n                    type = \"text\"\r\n                    className = \"mx-3 mb-3 col-10\"\r\n                    value={userDetails.enrollmentNumber}\r\n                    onChange={(e) => setUserDetails({...userDetails,enrollmentNumber: e.target.value})}\r\n                />\r\n                <TextField\r\n                    label= \"Programme\" \r\n                    required\r\n                    select\r\n                    SelectProps={{\r\n                        native:true\r\n                    }}\r\n                    className = \"mx-3 mb-3 col-10\"\r\n                    value={userDetails.programme}\r\n                    onChange={(e) => setUserDetails({...userDetails,programme:e.target.value})}\r\n                >\r\n                    <option value=\"B.Tech\">\r\n                        B.Tech \r\n                    </option>\r\n                    <option value=\"BS Hons\">\r\n                        Bs Hons \r\n                    </option>\r\n                    <option value=\"BA\">\r\n                        BA \r\n                    </option>\r\n                    <option value=\"B.B.A\">\r\n                        B.B.A \r\n                    </option>\r\n                </TextField>\r\n                <TextField\r\n                    label= \"Email\" \r\n                    required\r\n                    type = \"email\"\r\n                    className = \"mx-3 mb-3 col-10\"\r\n                    value={userDetails.emailId}\r\n                    onChange={(e) => setUserDetails({...userDetails,emailId: e.target.value})}\r\n                />\r\n                <TextField\r\n                    label= \"Password\" \r\n                    required\r\n                    type = \"password\"\r\n                    className = \"mx-3 mb-3 col-10\"\r\n                    value={userDetails.password}\r\n                    onChange={(e) => setUserDetails({...userDetails,password: e.target.value})}\r\n                />\r\n                <TextField\r\n                    label= \"Confirm Password\" \r\n                    required\r\n                    type = \"password\"\r\n                    className = \"mx-3 mb-5 col-10\"\r\n                    value={userDetails.confirmPassword}\r\n                    onChange={(e) => setUserDetails({...userDetails,confirmPassword: e.target.value})}\r\n                />\r\n                \r\n                <div className=\"d-flex justify-content-center align-items-enter\">\r\n                    <Button type = \"submit\" variant=\"contained\" disabled={!detailsIsValid} className=\"text-center mx-auto w-50\" color=\"primary\">Submit</Button>\r\n                </div>\r\n\r\n                <div className=\"w-100 my-3 divider\"></div>\r\n\r\n                <p className=\"text-center\">Already have account? <Link to=\"/login\">Login</Link></p>\r\n                \r\n            </form>\r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport GlobalLoader from './components/GlobalLoader';\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport { GlobalLoadingContext } from './Context/GlobalLoadingContext';\r\nimport HomeContextProvider from './Context/HomeContext';\r\nimport { currentUser } from './Services/AuthServices';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [user,setUser] = useState(\"loading\");\r\n  const {globalLoading,setGlobalLoading} = useContext(GlobalLoadingContext);\r\n\r\n  useEffect(() => {\r\n    let AuthObservalble = currentUser.subscribe(data => setUser(data))\r\n\r\n    return () => {\r\n      AuthObservalble.unsubscribe();\r\n    }\r\n  },[])\r\n  if(user===null && (window.location.pathname!==\"/login\" && window.location.pathname!==\"/register\")){\r\n    window.location = \"/login\";\r\n  }\r\n\r\n  return (\r\n\r\n    <>\r\n    {(user===\"loading\" || globalLoading) && <GlobalLoader />}\r\n\r\n    {user!==\"loading\" && \r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact ><HomeContextProvider><Home></Home></HomeContextProvider></Route>\r\n          <Route path=\"/login\" exact><Login></Login></Route>\r\n          <Route path=\"/register\" exact><Register></Register></Route>\r\n        </Switch>\r\n      </Router>\r\n    }\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport GlobalLoadingContextProvider from './Context/GlobalLoadingContext';\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure({\r\n  position: toast.POSITION.TOP_RIGHT,\r\n  autoClose: 5000,\r\n  hideProgressBar: false,\r\n  newestOnTop: false,\r\n  closeOnClick: true,\r\n  rtl: false,\r\n  pauseOnFocusLoss: false,\r\n  draggable: false,\r\n  pauseOnHover: false,\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalLoadingContextProvider>\r\n      <App />\r\n    </GlobalLoadingContextProvider>\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}